{"version":3,"sources":["form-builder.min.js","helpers.js","events.js","htmlentities.js","kc-toggle.js","form-builder.js","to-xml.js","polyfills.js"],"names":["formBuilderHelpersFn","opts","formBuilder","_helpers","doCancel","events","formBuilderEventsFn","attrString","attrs","attributes","attr","hasOwnProperty","safeAttr","push","name","value","join","hyphenCase","str","replace","$1","toLowerCase","makeClassName","safeAttrName","className","valString","window","JSON","stringify","HTML_ENTITIES","encode","mobileClass","a","test","substr","navigator","userAgent","vendor","opera","startMoving","event","ui","item","show","addClass","startIndex","$","this","index","stopMoving","removeClass","sender","sortable","save","beforeStop","form","document","getElementById","formID","lastIndex","children","length","cancelArray","stopIndex","placeholder","sortableControls","parent","hasClass","prepend","append","some","elem","safename","forceNumber","initTooltip","tt","tooltip","find","mouseenter","outerWidth","css","width","stop","fadeIn","mouseleave","fadeOut","hide","getTypes","$field","type","subtype","val","trimAttrs","xmlRemove","undefined","i","inArray","escapeAttrs","xmlSave","formDataNew","toXML","formData","jsonSave","notify","warning","element","getElement","doSave","xml","json","dataType","jQuery","trigger","onchange","dispatchEvent","formSaved","id","makeId","success","messages","formUpdated","incrementId","split","lastIndexOf","newFieldNumber","parseInt","substring","baseString","arguments","epoch","Date","getTime","tagName","updatePreview","field","fieldData","data","fieldClass","indexOf","preview","fieldType","$prevHolder","previewData","label","maxlength","style","toggle","is","match","values","multiple","each","option","selected","classNames","fieldPreview","html","kcToggle","Object","assign","attrsString","options","reverse","optionName","checked","optionId","selectColor","updateMultipleSelect","on","parents","prop","removeAttr","debounce","func","timeout","wait","immediate","context","args","later","apply","callNow","clearTimeout","setTimeout","htmlEncode","text","htmlDecode","validateForm","$form","errors","fieldAttr","error","labelEmpty","attribute","alert","animate","scrollTop","offset","top","targetID","next","slideUp","slideDown","disabledTT","add","title","fieldNonEditable","markup","remove","noFormControl","blockElements","concat","subtypes","querySelector","classes","types","button","submit","primaryType","re","RegExp","splice","unique","trim","tag","content","contentType","createElement","getContentType","Array","isArray","_typeof","appendContent","string","innerHTML","object","appendChild","array","setAttribute","call","closeConfirm","overlay","dialog","getElementsByClassName","classList","modalClosed","editorLayout","controlPosition","layoutMap","left","stage","controls","right","showOverlay","body","onclick","confirm","message","yesAction","coords","yes","no","btnWrap","miniModal","pageX","Math","max","documentElement","clientWidth","innerWidth","pageY","clientHeight","innerHeight","position","focus","viewData","removeAllfields","fields","querySelectorAll","$fields","markEmptyArray","parentElement","outerHeight","marginTop","setFieldOrder","$cbUL","fieldOrder","sessionStorage","setItem","orderFields","frmbFields","getItem","removeItem","parse","keys","map","controlOrder","newOrderFields","filter","Boolean","loaded","Event","userDeclined","htmlEntities","getHtmlTranslationTable","table","quoteStyle","decimal","entities","hashMap","constMappingTable","constMappingQuoteStyle","useTable","useQuoteStyle","isNaN","toUpperCase","Error","String","fromCharCode","regex","ent","encoded","Symbol","iterator","obj","constructor","Toggle","defaults","theme","labels","off","extend","$kcToggle","insertAfter","toggleClass","kctOn","kctOff","kctHandle","kctInner","click","fn","FormBuilder","disableFields","defaultFields","fieldRemoveWarn","roles",1,"addOption","allFieldsRemoved","allowSelect","autocomplete","cannotBeEmpty","checkboxGroup","checkbox","checkboxes","clearAllMessage","clearAll","close","copy","dateField","description","descriptionField","devMode","editNames","editorTitle","editXML","fieldDeleteWarning","fieldVars","fieldRemoveWarning","fileUpload","getStarted","header","hidden","limitRole","mandatory","minOptionMessage","optional","optionLabelPlaceholder","optionValuePlaceholder","optionEmpty","paragraph","placeholders","textarea","email","password","radioGroup","radio","removeMessage","required","richText","selectOptions","select","selectionsMessage","size","sizes","xs","sm","m","lg","styles","btn","default","danger","info","primary","textArea","viewXML","console","log","warn","prefix","color","frmbID","$sortableFields","layout","lastID","boxID","meta","cbUl","class","typeLabel","appendTo","viewDataText","viewJSON","saveAll","formActions","outerHTML","cursor","opacity","revert","start","cancel","helper","connectWith","update","prepFieldVars","$stageWrap","$formWrap","before","cbWrap","saveAndUpdate","evt","nonEditableFields","prependedField","appendedField","isNew","nameAttr","role","exec","appendNewField","getXML","parseXML","loadData","doLoadData","e","offsetX","offsetY","appendTextarea","appendFieldLi","advFields","appendInput","appendSelectList","selectFieldOptions","appendFieldType","rich-text","radio-group","checkbox-group","key","textAttribute","fieldDescription","subTypeField","btnStyles","noDescFields","noMakeAttr","fieldDescLabel","for","fieldDescInput","fieldDesc","subTypes","subTypeLabel","forEach","tags","styleField","styleLabel","active","placeholderFields","noName","noMaxlength","attrVal","attrLabel","attributefield","attributeLabel","requiredField","noRequire","noMake","requireField","_requiredField","defaultChecked","labelVal","delBtn","toggleBtn","liContents","li","$li","eq","after","multipleSelect","optionInputType","defaultOptionData","optionData","optionInputs","removeAttrs","preventDefault","optionsCount","handled","fieldVal","stopPropagation","toggleEdit","fieldId","editMode","slideToggle","closest","delegate","closestToolTip","ttVal","buttonPosition","getBoundingClientRect","bodyRect","deleteID","removeField","childNodes","addEventListener","warnH3","warnMessage","styleVal","$parent","$btnStyle","prev","siblings","requiredAsterisk","enableRolesCB","$optionWrap","$multiple","$firstOption","isMultiple","xmlButton","code","pre","clearButton","wrap","height","existingFormBuilder","newElement","clone","serialStr","fieldOptions","$option","sortableFields","roleVals","n","xmlAttrs","xmlField","multipleField","fieldContent","target","TypeError","output","source","nextKey","Element","prototype","parentNode","removeChild","createEvent","initEvent","needle","pos","arr","what","ax","L","NodeList"],"mappings":"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SAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,QAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,QAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,UAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,SAClBA,EAAS,KAAS,WAClBA,EAAS,KAAS,WAClBA,EAA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","file":"form-builder.min.js","sourcesContent":["'use strict';\n\n/**\n * PHP htmlentities recreation in JavaScript\n * minor changes to match styleguide and remove unneeded functionality\n * @see https://github.com/kvz/phpjs\n */\nvar HTML_ENTITIES = function () {\n  'use strict';\n\n  var htmlEntities = {};\n\n  htmlEntities.getHtmlTranslationTable = function (table, quoteStyle) {\n\n    var entities = {},\n        hashMap = {},\n        decimal;\n    var constMappingTable = {},\n        constMappingQuoteStyle = {};\n    var useTable = {},\n        useQuoteStyle = {};\n\n    // Translate arguments\n    constMappingTable[0] = 'HTML_SPECIALCHARS';\n    constMappingTable[1] = 'HTML_ENTITIES';\n    constMappingQuoteStyle[0] = 'ENT_NOQUOTES';\n    constMappingQuoteStyle[2] = 'ENT_COMPAT';\n    constMappingQuoteStyle[3] = 'ENT_QUOTES';\n\n    useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';\n    useQuoteStyle = !isNaN(quoteStyle) ? constMappingQuoteStyle[quoteStyle] : quoteStyle ? quoteStyle.toUpperCase() : 'ENT_COMPAT';\n\n    if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n      throw new Error('Table: ' + useTable + ' not supported');\n      // return false;\n    }\n\n    entities['38'] = '&amp;';\n    if (useTable === 'HTML_ENTITIES') {\n      entities['160'] = '&nbsp;';\n      entities['161'] = '&iexcl;';\n      entities['162'] = '&cent;';\n      entities['163'] = '&pound;';\n      entities['164'] = '&curren;';\n      entities['165'] = '&yen;';\n      entities['166'] = '&brvbar;';\n      entities['167'] = '&sect;';\n      entities['168'] = '&uml;';\n      entities['169'] = '&copy;';\n      entities['170'] = '&ordf;';\n      entities['171'] = '&laquo;';\n      entities['172'] = '&not;';\n      entities['173'] = '&shy;';\n      entities['174'] = '&reg;';\n      entities['175'] = '&macr;';\n      entities['176'] = '&deg;';\n      entities['177'] = '&plusmn;';\n      entities['178'] = '&sup2;';\n      entities['179'] = '&sup3;';\n      entities['180'] = '&acute;';\n      entities['181'] = '&micro;';\n      entities['182'] = '&para;';\n      entities['183'] = '&middot;';\n      entities['184'] = '&cedil;';\n      entities['185'] = '&sup1;';\n      entities['186'] = '&ordm;';\n      entities['187'] = '&raquo;';\n      entities['188'] = '&frac14;';\n      entities['189'] = '&frac12;';\n      entities['190'] = '&frac34;';\n      entities['191'] = '&iquest;';\n      entities['192'] = '&Agrave;';\n      entities['193'] = '&Aacute;';\n      entities['194'] = '&Acirc;';\n      entities['195'] = '&Atilde;';\n      entities['196'] = '&Auml;';\n      entities['197'] = '&Aring;';\n      entities['198'] = '&AElig;';\n      entities['199'] = '&Ccedil;';\n      entities['200'] = '&Egrave;';\n      entities['201'] = '&Eacute;';\n      entities['202'] = '&Ecirc;';\n      entities['203'] = '&Euml;';\n      entities['204'] = '&Igrave;';\n      entities['205'] = '&Iacute;';\n      entities['206'] = '&Icirc;';\n      entities['207'] = '&Iuml;';\n      entities['208'] = '&ETH;';\n      entities['209'] = '&Ntilde;';\n      entities['210'] = '&Ograve;';\n      entities['211'] = '&Oacute;';\n      entities['212'] = '&Ocirc;';\n      entities['213'] = '&Otilde;';\n      entities['214'] = '&Ouml;';\n      entities['215'] = '&times;';\n      entities['216'] = '&Oslash;';\n      entities['217'] = '&Ugrave;';\n      entities['218'] = '&Uacute;';\n      entities['219'] = '&Ucirc;';\n      entities['220'] = '&Uuml;';\n      entities['221'] = '&Yacute;';\n      entities['222'] = '&THORN;';\n      entities['223'] = '&szlig;';\n      entities['224'] = '&agrave;';\n      entities['225'] = '&aacute;';\n      entities['226'] = '&acirc;';\n      entities['227'] = '&atilde;';\n      entities['228'] = '&auml;';\n      entities['229'] = '&aring;';\n      entities['230'] = '&aelig;';\n      entities['231'] = '&ccedil;';\n      entities['232'] = '&egrave;';\n      entities['233'] = '&eacute;';\n      entities['234'] = '&ecirc;';\n      entities['235'] = '&euml;';\n      entities['236'] = '&igrave;';\n      entities['237'] = '&iacute;';\n      entities['238'] = '&icirc;';\n      entities['239'] = '&iuml;';\n      entities['240'] = '&eth;';\n      entities['241'] = '&ntilde;';\n      entities['242'] = '&ograve;';\n      entities['243'] = '&oacute;';\n      entities['244'] = '&ocirc;';\n      entities['245'] = '&otilde;';\n      entities['246'] = '&ouml;';\n      entities['247'] = '&divide;';\n      entities['248'] = '&oslash;';\n      entities['249'] = '&ugrave;';\n      entities['250'] = '&uacute;';\n      entities['251'] = '&ucirc;';\n      entities['252'] = '&uuml;';\n      entities['253'] = '&yacute;';\n      entities['254'] = '&thorn;';\n      entities['255'] = '&yuml;';\n    }\n\n    if (useQuoteStyle !== 'ENT_NOQUOTES') {\n      entities['34'] = '&quot;';\n    }\n    if (useQuoteStyle === 'ENT_QUOTES') {\n      entities['39'] = '&#39;';\n    }\n    entities['60'] = '&lt;';\n    entities['62'] = '&gt;';\n\n    // ascii decimals to real symbols\n    for (decimal in entities) {\n      if (entities.hasOwnProperty(decimal)) {\n        hashMap[String.fromCharCode(decimal)] = entities[decimal];\n      }\n    }\n\n    return hashMap;\n  };\n\n  htmlEntities.encode = function (string, quoteStyle) {\n    var hashMap = this.getHtmlTranslationTable('HTML_ENTITIES', quoteStyle);\n\n    string = string === null ? '' : string + '';\n\n    if (!hashMap) {\n      return false;\n    }\n\n    if (quoteStyle && quoteStyle === 'ENT_QUOTES') {\n      hashMap['\\''] = '&#039;';\n    }\n\n    var regex = new RegExp('&(?:#\\\\d+|#x[\\\\da-f]+|[a-zA-Z][\\\\da-z]*);|[' + Object.keys(hashMap).join('')\n    // replace regexp special chars\n    .replace(/([()[\\]{}\\-.*+?^$|\\/\\\\])/g, '\\\\$1') + ']', 'g');\n\n    return string.replace(regex, function (ent) {\n      var encoded = void 0;\n      if (ent.length > 1) {\n        encoded = ent;\n      }\n      encoded = hashMap[ent];\n      return encoded;\n    });\n  };\n\n  return htmlEntities;\n}(HTML_ENTITIES || {});\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nfunction formBuilderHelpersFn(opts, formBuilder) {\n  'use strict';\n\n  var _helpers = {\n    doCancel: false\n  };\n\n  formBuilder.events = formBuilderEventsFn();\n\n  /**\n   * Convert an attrs object into a string\n   *\n   * @param  {Object} attrs object of attributes for markup\n   * @return {string}\n   */\n  _helpers.attrString = function (attrs) {\n    var attributes = [];\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        attr = _helpers.safeAttr(attr, attrs[attr]);\n        attributes.push(attr.name + attr.value);\n      }\n    }\n    var attrString = attributes.join(' ');\n    return attrString;\n  };\n\n  /**\n   * Convert camelCase into lowercase-hyphen\n   *\n   * @param  {string} str\n   * @return {string}\n   */\n  _helpers.hyphenCase = function (str) {\n    str = str.replace(/([A-Z])/g, function ($1) {\n      return '-' + $1.toLowerCase();\n    });\n\n    return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n  };\n\n  /**\n   * Convert converts messy `cl#ssNames` into valid `class-names`\n   *\n   * @param  {string} str\n   * @return {string}\n   */\n  _helpers.makeClassName = function (str) {\n    str = str.replace(/[^\\w\\s\\-]/gi, '');\n    return _helpers.hyphenCase(str);\n  };\n\n  _helpers.safeAttrName = function (name) {\n    var safeAttr = {\n      className: 'class'\n    };\n\n    return safeAttr[name] || _helpers.hyphenCase(name);\n  };\n\n  _helpers.safeAttr = function (name, value) {\n    name = _helpers.safeAttrName(name);\n\n    var valString = window.JSON.stringify(HTML_ENTITIES.encode(value));\n\n    value = value ? '=' + valString : '';\n    return {\n      name: name,\n      value: value\n    };\n  };\n\n  /**\n   * Add a mobile class\n   *\n   * @return {string}\n   */\n  _helpers.mobileClass = function () {\n    var mobileClass = '';\n    (function (a) {\n      if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n        mobileClass = ' fb-mobile';\n      }\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return mobileClass;\n  };\n\n  /**\n   * Callback for when a drag begins\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.startMoving = function (event, ui) {\n    event = event;\n    ui.item.show().addClass('moving');\n    _helpers.startIndex = $('li', this).index(ui.item);\n  };\n\n  /**\n   * Callback for when a drag ends\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.stopMoving = function (event, ui) {\n    event = event;\n    ui.item.removeClass('moving');\n    if (_helpers.doCancel) {\n      $(ui.sender).sortable('cancel');\n      $(this).sortable('cancel');\n    }\n    _helpers.save();\n    _helpers.doCancel = false;\n  };\n\n  /**\n   * jQuery UI sortable beforeStop callback used for both lists.\n   * Logic for canceling the sort or drop.\n   */\n  _helpers.beforeStop = function (event, ui) {\n    event = event;\n\n    var form = document.getElementById(opts.formID),\n        lastIndex = form.children.length - 1,\n        cancelArray = [];\n    _helpers.stopIndex = ui.placeholder.index() - 1;\n\n    if (!opts.sortableControls && ui.item.parent().hasClass('frmb-control')) {\n      cancelArray.push(true);\n    }\n\n    if (opts.prepend) {\n      cancelArray.push(_helpers.stopIndex === 0);\n    }\n\n    if (opts.append) {\n      cancelArray.push(_helpers.stopIndex + 1 === lastIndex);\n    }\n\n    _helpers.doCancel = cancelArray.some(function (elem) {\n      return elem === true;\n    });\n  };\n\n  /**\n   * Make strings safe to be used as classes\n   *\n   * @param  {string} str string to be converted\n   * @return {string}     converter string\n   */\n  _helpers.safename = function (str) {\n    return str.replace(/\\s/g, '-').replace(/[^a-zA-Z0-9\\-]/g, '').toLowerCase();\n  };\n\n  /**\n   * Strips non-numbers from a number only input\n   *\n   * @param  {string} str string with possible number\n   * @return {string}     string without numbers\n   */\n  _helpers.forceNumber = function (str) {\n    return str.replace(/[^0-9]/g, '');\n  };\n\n  /**\n   * hide and show mouse tracking tooltips, only used for disabled\n   * fields in the editor.\n   *\n   * @todo   remove or refactor to make better use\n   * @param  {Object} tt jQuery option with nexted tooltip\n   * @return {void}\n   */\n  _helpers.initTooltip = function (tt) {\n    var tooltip = tt.find('.tooltip');\n    tt.mouseenter(function () {\n      if (tooltip.outerWidth() > 200) {\n        tooltip.addClass('max-width');\n      }\n      tooltip.css('left', tt.width() + 14);\n      tooltip.stop(true, true).fadeIn('fast');\n    }).mouseleave(function () {\n      tt.find('.tooltip').stop(true, true).fadeOut('fast');\n    });\n    tooltip.hide();\n  };\n\n  /**\n   * Attempts to get element type and subtype\n   *\n   * @param  {Object} $field\n   * @return {Object}\n   */\n  _helpers.getTypes = function ($field) {\n    return {\n      type: $field.attr('type'),\n      subtype: $('.fld-subtype', $field).val()\n    };\n  };\n\n  // Remove null or undefined values\n  _helpers.trimAttrs = function (attrs) {\n    var xmlRemove = [null, undefined, '', false];\n    for (var i in attrs) {\n      if (xmlRemove.inArray(attrs[i])) {\n        delete attrs[i];\n      }\n    }\n    return attrs;\n  };\n\n  // Remove null or undefined values\n  _helpers.escapeAttrs = function (attrs) {\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        attrs[attr] = HTML_ENTITIES.encode(attrs[attr]);\n      }\n    }\n\n    return attrs;\n  };\n\n  /**\n   * XML save\n   *\n   * @param  {Object} form sortableFields node\n   */\n  _helpers.xmlSave = function (form) {\n    var formDataNew = $(form).toXML(_helpers);\n    if (window.JSON.stringify(formDataNew) === window.JSON.stringify(formBuilder.formData)) {\n      return false;\n    }\n    formBuilder.formData = formDataNew;\n  };\n\n  _helpers.jsonSave = function () {\n    opts.notify.warning('json data not available yet');\n  };\n\n  /**\n   * Saves and returns formData\n   * @return {XML|JSON}\n   */\n  _helpers.save = function () {\n    var element = _helpers.getElement(),\n        form = document.getElementById(opts.formID),\n        formData;\n\n    var doSave = {\n      xml: _helpers.xmlSave,\n      json: _helpers.jsonSave\n    };\n\n    // save action for current `dataType`\n    formData = doSave[opts.dataType](form);\n\n    if (element) {\n      element.value = formBuilder.formData;\n      if (window.jQuery) {\n        $(element).trigger('change');\n      } else {\n        element.onchange();\n      }\n    }\n\n    //trigger formSaved event\n    document.dispatchEvent(formBuilder.events.formSaved);\n    return formData;\n  };\n\n  /**\n   * Attempts to find an element,\n   * useful if formBuilder was called without Query\n   * @return {Object}\n   */\n  _helpers.getElement = function () {\n    var element = false;\n    if (formBuilder.element) {\n      element = formBuilder.element;\n\n      if (!element.id) {\n        _helpers.makeId(element);\n      }\n\n      if (!element.onchange) {\n        element.onchange = function () {\n          opts.notify.success(opts.messages.formUpdated);\n        };\n      }\n    }\n\n    return element;\n  };\n\n  /**\n   * increments the field ids with support for multiple editors\n   * @param  {String} id field ID\n   * @return {String}    incremented field ID\n   */\n  _helpers.incrementId = function (id) {\n    var split = id.lastIndexOf('-'),\n        newFieldNumber = parseInt(id.substring(split + 1)) + 1,\n        baseString = id.substring(0, split);\n\n    return baseString + '-' + newFieldNumber;\n  };\n\n  _helpers.makeId = function () {\n    var element = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];\n\n    var epoch = new Date().getTime();\n\n    return element.tagName + '-' + epoch;\n  };\n\n  /**\n   * Collect field attribute values and call fieldPreview to generate preview\n   * @param  {Object} field jQuery wrapped dom object @todo, remove jQuery dependency\n   */\n  _helpers.updatePreview = function (field) {\n    var fieldData = field.data('fieldData') || {};\n    var fieldClass = field.attr('class');\n    if (fieldClass.indexOf('ui-sortable-handle') !== -1) {\n      return;\n    }\n\n    var fieldType = $(field).attr('type'),\n        $prevHolder = $('.prev-holder', field),\n        previewData = {\n      label: $('.fld-label', field).val(),\n      type: fieldType\n    },\n        preview;\n\n    var subtype = $('.fld-subtype', field).val();\n    if (subtype) {\n      previewData.subtype = subtype;\n    }\n\n    var maxlength = $('.fld-maxlength', field).val();\n    if (maxlength) {\n      previewData.maxlength = maxlength;\n    }\n\n    previewData.className = $('.fld-className', field).val() || fieldData.className || '';\n\n    var placeholder = $('.fld-placeholder', field).val();\n    if (placeholder) {\n      previewData.placeholder = placeholder;\n    }\n\n    var style = $('.btn-style', field).val();\n    if (style) {\n      previewData.style = style;\n    }\n\n    if (fieldType === 'checkbox') {\n      previewData.toggle = $('.checkbox-toggle', field).is(':checked');\n    }\n\n    if (fieldType.match(/(select|checkbox-group|radio-group)/)) {\n      previewData.values = [];\n      previewData.multiple = $('[name=\"multiple\"]', field).is(':checked');\n\n      $('.sortable-options li', field).each(function () {\n        var option = {};\n        option.selected = $('.option-selected', this).is(':checked');\n        option.value = $('.option-value', this).val();\n        option.label = $('.option-label', this).val();\n        previewData.values.push(option);\n      });\n    }\n\n    previewData.className = _helpers.classNames(field, previewData);\n    $('.fld-className', field).val(previewData.className);\n\n    field.data('fieldData', previewData);\n    preview = _helpers.fieldPreview(previewData);\n\n    $prevHolder.html(preview);\n\n    $('input[toggle]', $prevHolder).kcToggle();\n  };\n\n  /**\n   * Generate preview markup\n   *\n   * @todo   make this smarter and use tags\n   * @param  {Object} attrs\n   * @return {String}       preview markup for field\n   */\n  _helpers.fieldPreview = function (attrs) {\n    var i,\n        preview = '',\n        epoch = new Date().getTime();\n    attrs = Object.assign({}, attrs);\n    attrs.type = attrs.subtype || attrs.type;\n    var toggle = attrs.toggle ? 'toggle' : '';\n    // attrs = _helpers.escapeAttrs(attrs);\n    var attrsString = _helpers.attrString(attrs);\n\n    switch (attrs.type) {\n      case 'textarea':\n      case 'rich-text':\n        preview = '<textarea ' + attrsString + '></textarea>';\n        break;\n      case 'button':\n      case 'submit':\n        preview = '<button ' + attrsString + '>' + attrs.label + '</button>';\n        break;\n      case 'select':\n        var options = '',\n            multiple = attrs.multiple ? 'multiple' : '';\n        attrs.values.reverse();\n        if (attrs.placeholder) {\n          options += '<option disabled selected>' + attrs.placeholder + '</option>';\n        }\n        for (i = attrs.values.length - 1; i >= 0; i--) {\n          var selected = attrs.values[i].selected && !attrs.placeholder ? 'selected' : '';\n          options += '<option value=\"' + attrs.values[i].value + '\" ' + selected + '>' + attrs.values[i].label + '</option>';\n        }\n        preview = '<' + attrs.type + ' class=\"' + attrs.className + '\" ' + multiple + '>' + options + '</' + attrs.type + '>';\n        break;\n      case 'checkbox-group':\n      case 'radio-group':\n        var type = attrs.type.replace('-group', ''),\n            optionName = type + '-' + epoch;\n        attrs.values.reverse();\n        for (i = attrs.values.length - 1; i >= 0; i--) {\n          var checked = attrs.values[i].selected ? 'checked' : '';\n          var optionId = type + '-' + epoch + '-' + i;\n          preview += '<div><input type=\"' + type + '\" class=\"' + attrs.className + '\" name=\"' + optionName + '\" id=\"' + optionId + '\" value=\"' + attrs.values[i].value + '\" ' + checked + '/><label for=\"' + optionId + '\">' + attrs.values[i].label + '</label></div>';\n        }\n        break;\n      case 'text':\n      case 'password':\n      case 'email':\n      case 'date':\n      case 'file':\n        preview = '<input ' + attrsString + '>';\n        break;\n      case 'color':\n        preview = '<input type=\"' + attrs.type + '\" class=\"' + attrs.className + '\"> ' + opts.messages.selectColor;\n        break;\n      case 'hidden':\n      case 'checkbox':\n        preview = '<input type=\"' + attrs.type + '\" ' + toggle + ' >';\n        break;\n      case 'autocomplete':\n        preview = '<input class=\"ui-autocomplete-input ' + attrs.className + '\" autocomplete=\"on\">';\n        break;\n      default:\n        preview = '<' + attrs.type + '>' + attrs.label + '</' + attrs.type + '>';\n    }\n\n    return preview;\n  };\n\n  // update preview to label\n  _helpers.updateMultipleSelect = function () {\n    $(document.getElementById(opts.formID)).on('change', 'input[name=\"multiple\"]', function () {\n      var options = $(this).parents('.field-options:eq(0)').find('.sortable-options input.option-selected');\n      if (this.checked) {\n        options.each(function () {\n          $(this).prop('type', 'checkbox');\n        });\n      } else {\n        options.each(function () {\n          $(this).removeAttr('checked').prop('type', 'radio');\n        });\n      }\n    });\n  };\n\n  _helpers.debounce = function (func) {\n    var wait = arguments.length <= 1 || arguments[1] === undefined ? 250 : arguments[1];\n    var immediate = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n      var later = function later() {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  };\n\n  _helpers.htmlEncode = function (value) {\n    return $('<div/>').text(value).html();\n  };\n\n  _helpers.htmlDecode = function (value) {\n    return $('<div/>').html(value).text();\n  };\n\n  _helpers.validateForm = function () {\n    var $form = $(document.getElementById(opts.formID));\n\n    var errors = [];\n    // check for empty field labels\n    $('input[name=\"label\"], input[type=\"text\"].option', $form).each(function () {\n      if ($(this).val() === '') {\n        var field = $(this).parents('li.form-field'),\n            fieldAttr = $(this);\n        errors.push({\n          field: field,\n          error: opts.messages.labelEmpty,\n          attribute: fieldAttr\n        });\n      }\n    });\n\n    // @todo add error = { noVal: opts.messages.labelEmpty }\n    if (errors.length) {\n      alert('Error: ' + errors[0].error);\n      $('html, body').animate({\n        scrollTop: errors[0].field.offset().top\n      }, 1000, function () {\n        var targetID = $('.toggle-form', errors[0].field).attr('id');\n        $('.toggle-form', errors[0].field).addClass('open').parent().next('.prev-holder').slideUp(250);\n        $('#' + targetID + '-fld').slideDown(250, function () {\n          errors[0].attribute.addClass('error');\n        });\n      });\n    }\n  };\n\n  /**\n   * Display a custom tooltip for disabled fields.\n   *\n   * @param  {Object} field\n   */\n  _helpers.disabledTT = {\n    className: 'frmb-tt',\n    add: function add(field) {\n      var title = opts.messages.fieldNonEditable;\n\n      if (title) {\n        var tt = _helpers.markup('p', title, { className: _helpers.disabledTT.className });\n        field.append(tt);\n      }\n    },\n    remove: function remove(field) {\n      $('.frmb-tt', field).remove();\n    }\n  };\n\n  _helpers.classNames = function (field, previewData) {\n    var noFormControl = ['checkbox', 'checkbox-group', 'radio-group'],\n        blockElements = ['header', 'paragraph', 'button'],\n        i = void 0;\n\n    for (i = blockElements.length - 1; i >= 0; i--) {\n      blockElements = blockElements.concat(opts.messages.subtypes[blockElements[i]]);\n    }\n\n    noFormControl = noFormControl.concat(blockElements);\n\n    var type = previewData.type;\n    var style = previewData.style;\n    var className = field[0].querySelector('.fld-className').value;\n    var classes = [].concat(className.split(' ')).reverse();\n    var types = {\n      button: 'btn',\n      submit: 'btn'\n    };\n\n    var primaryType = types[type];\n\n    if (primaryType) {\n      if (style) {\n        for (i = classes.length - 1; i >= 0; i--) {\n          var re = new RegExp('(?:^|\\s)' + primaryType + '-(.*?)(?:\\s|$)+', 'g');\n          var match = classes[i].match(re);\n          if (match) {\n            classes.splice(i, 1);\n          }\n        }\n        classes.push(primaryType + '-' + style);\n      }\n      classes.push(primaryType);\n    } else if (!noFormControl.inArray(type)) {\n      classes.push('form-control');\n    }\n\n    // reverse the array to put custom classes at end, remove any duplicates, convert to string, remove whitespace\n    return classes.reverse().unique().join(' ').trim();\n  };\n\n  _helpers.markup = function (tag) {\n    var content = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n    var attrs = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    var contentType = void 0,\n        field = document.createElement(tag),\n        getContentType = function getContentType(content) {\n      return Array.isArray(content) ? 'array' : typeof content === 'undefined' ? 'undefined' : _typeof(content);\n    },\n        appendContent = {\n      string: function string(content) {\n        field.innerHTML = content;\n      },\n      object: function object(content) {\n        return field.appendChild(content);\n      },\n      array: function array(content) {\n        for (var i = 0; i < content.length; i++) {\n          contentType = getContentType(content[i]);\n          appendContent[contentType](content[i]);\n        }\n      }\n    };\n\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        if (attrs[attr]) {\n          var name = _helpers.safeAttrName(attr);\n          field.setAttribute(name, attrs[attr]);\n        }\n      }\n    }\n\n    contentType = getContentType(content);\n\n    if (content) {\n      appendContent[contentType].call(this, content);\n    }\n\n    return field;\n  };\n\n  /**\n   * Closes and open dialog\n   *\n   * @param  {Object} overlay Existing overlay if there is one\n   * @param  {Object} dialog  Existing dialog\n   * @return {Event}          Triggers modalClosed event\n   */\n  _helpers.closeConfirm = function (overlay, dialog) {\n    overlay = overlay || document.getElementsByClassName('form-builder-overlay')[0];\n    dialog = dialog || document.getElementsByClassName('form-builder-dialog')[0];\n    overlay.classList.remove('visible');\n    dialog.remove();\n    overlay.remove();\n    document.dispatchEvent(formBuilder.events.modalClosed);\n  };\n\n  /**\n   * Returns the layout data based on controlPosition option\n   * @param  {String} controlPosition 'left' or 'right'\n   * @return {Object}\n   */\n  _helpers.editorLayout = function (controlPosition) {\n    var layoutMap = {\n      left: {\n        stage: 'pull-right',\n        controls: 'pull-left'\n      },\n      right: {\n        stage: 'pull-left',\n        controls: 'pull-right'\n      }\n    };\n\n    return layoutMap[controlPosition] ? layoutMap[controlPosition] : '';\n  };\n\n  /**\n   * Adds overlay to the page. Used for modals.\n   * @return {Object}\n   */\n  _helpers.showOverlay = function () {\n    var overlay = _helpers.markup('div', null, {\n      className: 'form-builder-overlay'\n    });\n    document.body.appendChild(overlay);\n    overlay.classList.add('visible');\n\n    overlay.onclick = function () {\n      _helpers.closeConfirm(overlay);\n    };\n\n    return overlay;\n  };\n\n  /**\n   * Custom confirmation dialog\n   *\n   * @param  {Object}  message   Content to be displayed in the dialog\n   * @param  {Func}  yesAction callback to fire if they confirm\n   * @param  {Boolean} coords    location to put the dialog\n   * @param  {String}  className Custom class to be added to the dialog\n   * @return {Object}            Reference to the modal\n   */\n  _helpers.confirm = function (message, yesAction) {\n    var coords = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n    var className = arguments.length <= 3 || arguments[3] === undefined ? '' : arguments[3];\n\n    var overlay = _helpers.showOverlay();\n    var yes = _helpers.markup('button', opts.messages.yes, { className: 'yes btn btn-success btn-sm' }),\n        no = _helpers.markup('button', opts.messages.no, { className: 'no btn btn-danger btn-sm' });\n\n    no.onclick = function () {\n      _helpers.closeConfirm(overlay);\n    };\n\n    yes.onclick = function () {\n      yesAction();\n      _helpers.closeConfirm(overlay);\n    };\n\n    var btnWrap = _helpers.markup('div', [no, yes], { className: 'button-wrap' });\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = _helpers.markup('div', [message, btnWrap], { className: className });\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    yes.focus();\n    return miniModal;\n  };\n\n  /**\n   * Popup dialog the does not require confirmation.\n   * @param  {String|DOM|Array}  content\n   * @param  {Boolean} coords    false if no coords are provided. Without coordinates\n   *                             the popup will appear center screen.\n   * @param  {String}  className classname to be added to the dialog\n   * @return {Object}            dom\n   */\n  _helpers.dialog = function (content) {\n    var coords = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n    var className = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n\n    _helpers.showOverlay();\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = _helpers.markup('div', content, { className: className });\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    if (className.indexOf('data-dialog') !== -1) {\n      document.dispatchEvent(formBuilder.events.viewData);\n    }\n    return miniModal;\n  };\n\n  /**\n   * Removes all fields from the form\n   */\n  _helpers.removeAllfields = function () {\n    var form = document.getElementById(opts.formID);\n    var fields = form.querySelectorAll('li.form-field');\n    var $fields = $(fields);\n    var markEmptyArray = [];\n\n    if (opts.prepend) {\n      markEmptyArray.push(true);\n    }\n\n    if (opts.append) {\n      markEmptyArray.push(true);\n    }\n\n    if (!markEmptyArray.some(function (elem) {\n      return elem === true;\n    })) {\n      form.parentElement.classList.add('empty');\n    }\n\n    form.classList.add('removing');\n\n    var outerHeight = 0;\n    $fields.each(function () {\n      outerHeight += $(this).outerHeight() + 3;\n    });\n\n    fields[0].style.marginTop = -outerHeight + 'px';\n\n    setTimeout(function () {\n      $fields.remove();\n      document.getElementById(opts.formID).classList.remove('removing');\n      _helpers.save();\n    }, 500);\n  };\n\n  /**\n   * If user re-orders the elements their order should be saved.\n   *\n   * @param {Object} $cbUL our list of elements\n   */\n  _helpers.setFieldOrder = function ($cbUL) {\n    if (!opts.sortableControls) {\n      return false;\n    }\n    var fieldOrder = {};\n    $cbUL.children().each(function (index, element) {\n      fieldOrder[index] = $(element).data('attrs').type;\n    });\n    if (window.sessionStorage) {\n      window.sessionStorage.setItem('fieldOrder', window.JSON.stringify(fieldOrder));\n    }\n  };\n\n  /**\n   * Reorder the controls if the user has previously ordered them.\n   *\n   * @param  {Array} frmbFields\n   * @return {Array}\n   */\n  _helpers.orderFields = function (frmbFields) {\n    var fieldOrder = false;\n\n    if (window.sessionStorage) {\n      if (opts.sortableControls) {\n        fieldOrder = window.sessionStorage.getItem('fieldOrder');\n      } else {\n        window.sessionStorage.removeItem('fieldOrder');\n      }\n    }\n\n    if (!fieldOrder) {\n      fieldOrder = opts.controlOrder.unique();\n    } else {\n      fieldOrder = window.JSON.parse(fieldOrder);\n      fieldOrder = Object.keys(fieldOrder).map(function (i) {\n        return fieldOrder[i];\n      });\n    }\n\n    var newOrderFields = [];\n\n    for (var i = fieldOrder.length - 1; i >= 0; i--) {\n      var field = frmbFields.filter(function (field) {\n        return field.attrs.type === fieldOrder[i];\n      })[0];\n      newOrderFields.push(field);\n    }\n\n    return newOrderFields.filter(Boolean);\n  };\n\n  return _helpers;\n}\n'use strict';\n\nfunction formBuilderEventsFn() {\n  'use strict';\n\n  var events = {};\n\n  events.loaded = new Event('loaded');\n  events.viewData = new Event('viewData');\n  events.userDeclined = new Event('userDeclined');\n  events.modalClosed = new Event('modalClosed');\n  events.formSaved = new Event('formSaved');\n\n  return events;\n}\n'use strict';\n\n(function ($) {\n  'use strict';\n\n  var Toggle = function Toggle(element, options) {\n\n    var defaults = {\n      theme: 'fresh',\n      labels: {\n        off: 'Off',\n        on: 'On'\n      }\n    };\n\n    var opts = $.extend(defaults, options),\n        $kcToggle = $('<div class=\"kc-toggle\"/>').insertAfter(element).append(element);\n\n    $kcToggle.toggleClass('on', element.is(':checked'));\n\n    var kctOn = '<div class=\"kct-on\">' + opts.labels.on + '</div>',\n        kctOff = '<div class=\"kct-off\">' + opts.labels.off + '</div>',\n        kctHandle = '<div class=\"kct-handle\"></div>',\n        kctInner = '<div class=\"kct-inner\">' + kctOn + kctHandle + kctOff + '</div>';\n\n    $kcToggle.append(kctInner);\n\n    $kcToggle.click(function () {\n      element.attr('checked', !element.attr('checked'));\n      $(this).toggleClass('on');\n    });\n  };\n\n  $.fn.kcToggle = function (options) {\n    var toggle = this;\n    return toggle.each(function () {\n      var element = $(this);\n      if (element.data('kcToggle')) {\n        return;\n      }\n      var kcToggle = new Toggle(element, options);\n      element.data('kcToggle', kcToggle);\n    });\n  };\n})(jQuery);\n'use strict';\n\n(function ($) {\n  var FormBuilder = function FormBuilder(options, element) {\n    var formBuilder = this;\n\n    var defaults = {\n      controlPosition: 'right',\n      controlOrder: ['autocomplete', 'button', 'checkbox', 'checkbox-group', 'date', 'file', 'header', 'hidden', 'paragraph', 'radio-group', 'select', 'text', 'textarea'],\n      dataType: 'xml',\n      /**\r\n       * Field types to be disabled\r\n       * ['text','select','textarea','radio-group','hidden','file','date','checkbox-group','checkbox','button','autocomplete']\r\n       */\n      disableFields: ['autocomplete', 'hidden'],\n      // Uneditable fields or other content you would like to appear before and after regular fields:\n      append: false,\n      prepend: false,\n      // array of objects with fields values\n      // ex:\n      // defaultFields: [{\n      //   label: 'First Name',\n      //   name: 'first-name',\n      //   required: 'true',\n      //   description: 'Your first name',\n      //   type: 'text'\n      // }, {\n      //   label: 'Phone',\n      //   name: 'phone',\n      //   description: 'How can we reach you?',\n      //   type: 'text'\n      // }],\n      defaultFields: [],\n      fieldRemoveWarn: false,\n      roles: {\n        1: 'Administrator'\n      },\n      messages: {\n        addOption: 'Add Option',\n        allFieldsRemoved: 'All fields were removed.',\n        allowSelect: 'Allow Select',\n        autocomplete: 'Autocomplete',\n        button: 'Button',\n        cannotBeEmpty: 'This field cannot be empty',\n        checkboxGroup: 'Checkbox Group',\n        checkbox: 'Checkbox',\n        checkboxes: 'Checkboxes',\n        className: 'Class',\n        clearAllMessage: 'Are you sure you want to clear all fields?',\n        clearAll: 'Clear',\n        close: 'Close',\n        content: 'Content',\n        copy: 'Copy To Clipboard',\n        dateField: 'Date Field',\n        description: 'Help Text',\n        descriptionField: 'Description',\n        devMode: 'Developer Mode',\n        editNames: 'Edit Names',\n        editorTitle: 'Form Elements',\n        editXML: 'Edit XML',\n        fieldDeleteWarning: false,\n        fieldVars: 'Field Variables',\n        fieldNonEditable: 'This field cannot be edited.',\n        fieldRemoveWarning: 'Are you sure you want to remove this field?',\n        fileUpload: 'File Upload',\n        formUpdated: 'Form Updated',\n        getStarted: 'Drag a field from the right to this area',\n        header: 'Header',\n        hide: 'Edit',\n        hidden: 'Hidden Input',\n        label: 'Label',\n        labelEmpty: 'Field Label cannot be empty',\n        limitRole: 'Limit access to one or more of the following roles:',\n        mandatory: 'Mandatory',\n        maxlength: 'Max Length',\n        minOptionMessage: 'This field requires a minimum of 2 options',\n        name: 'Name',\n        no: 'No',\n        off: 'Off',\n        on: 'On',\n        option: 'Option',\n        optional: 'optional',\n        optionLabelPlaceholder: 'Label',\n        optionValuePlaceholder: 'Value',\n        optionEmpty: 'Option value required',\n        paragraph: 'Paragraph',\n        placeholder: 'Placeholder',\n        placeholders: {\n          value: 'Value',\n          label: 'Label',\n          text: '',\n          textarea: '',\n          email: 'Enter you email',\n          placeholder: '',\n          className: 'space separated classes',\n          password: 'Enter your password'\n        },\n        preview: 'Preview',\n        radioGroup: 'Radio Group',\n        radio: 'Radio',\n        removeMessage: 'Remove Element',\n        remove: '&#215;',\n        required: 'Required',\n        richText: 'Rich Text Editor',\n        roles: 'Access',\n        save: 'Save',\n        selectOptions: 'Options',\n        select: 'Select',\n        selectColor: 'Select Color',\n        selectionsMessage: 'Allow Multiple Selections',\n        size: 'Size',\n        sizes: {\n          xs: 'Extra Small',\n          sm: 'Small',\n          m: 'Default',\n          lg: 'Large'\n        },\n        style: 'Style',\n        styles: {\n          btn: {\n            'default': 'Default',\n            danger: 'Danger',\n            info: 'Info',\n            primary: 'Primary',\n            success: 'Success',\n            warning: 'Warning'\n          }\n        },\n        subtype: 'Type',\n        subtypes: {\n          text: ['text', 'password', 'email', 'color'],\n          button: ['button', 'submit'],\n          header: ['h1', 'h2', 'h3'],\n          paragraph: ['p', 'address', 'blockquote', 'canvas', 'output']\n        },\n        text: 'Text Field',\n        textArea: 'Text Area',\n        toggle: 'Toggle',\n        warning: 'Warning!',\n        viewXML: '&lt;/&gt;',\n        yes: 'Yes'\n      },\n      notify: {\n        error: function error(message) {\n          return console.error(message);\n        },\n        success: function success(message) {\n          return console.log(message);\n        },\n        warning: function warning(message) {\n          return console.warn(message);\n        }\n      },\n      sortableControls: false,\n      prefix: 'form-builder-'\n    };\n\n    // @todo function to set parent types for subtypes\n    defaults.messages.subtypes.password = defaults.messages.subtypes.text;\n    defaults.messages.subtypes.email = defaults.messages.subtypes.text;\n    defaults.messages.subtypes.color = defaults.messages.subtypes.text;\n    defaults.messages.subtypes.submit = defaults.messages.subtypes.button;\n\n    var opts = $.extend(true, defaults, options),\n        elem = $(element),\n        frmbID = 'frmb-' + $('ul[id^=frmb-]').length++;\n\n    opts.formID = frmbID;\n\n    formBuilder.element = element;\n\n    var $sortableFields = $('<ul/>').attr('id', frmbID).addClass('frmb');\n    var _helpers = formBuilderHelpersFn(opts, formBuilder);\n\n    formBuilder.layout = _helpers.editorLayout(opts.controlPosition);\n\n    var lastID = frmbID + '-fld-1',\n        boxID = frmbID + '-control-box';\n\n    // create array of field objects to cycle through\n    var frmbFields = [{\n      tag: 'textarea',\n      meta: {\n        label: opts.messages.textArea\n      },\n      attrs: {\n        className: 'text-area',\n        name: 'textarea'\n      }\n    }\n    // , {\n    //   label: opts.messages.text,\n    //   attrs: {\n    //     type: 'text',\n    //     className: 'text-input',\n    //     name: 'text-input'\n    //   }\n    // }, {\n    //   label: opts.messages.select,\n    //   attrs: {\n    //     type: 'select',\n    //     className: 'select',\n    //     name: 'select'\n    //   }\n    // }, {\n    //   label: opts.messages.radioGroup,\n    //   attrs: {\n    //     type: 'radio-group',\n    //     className: 'radio-group',\n    //     name: 'radio-group'\n    //   }\n    // }, {\n    //   label: opts.messages.paragraph,\n    //   attrs: {\n    //     type: 'paragraph',\n    //     className: 'paragraph'\n    //   }\n    // }, {\n    //   label: opts.messages.hidden,\n    //   attrs: {\n    //     type: 'hidden',\n    //     className: 'hidden-input',\n    //     name: 'hidden-input'\n    //   }\n    // }, {\n    //   label: opts.messages.header,\n    //   attrs: {\n    //     type: 'header',\n    //     className: 'header'\n    //   }\n    // }, {\n    //   label: opts.messages.fileUpload,\n    //   attrs: {\n    //     type: 'file',\n    //     className: 'file-input',\n    //     name: 'file-input'\n    //   }\n    // }, {\n    //   label: opts.messages.dateField,\n    //   attrs: {\n    //     type: 'date',\n    //     className: 'calendar',\n    //     name: 'date-input'\n    //   }\n    // }, {\n    //   label: opts.messages.checkboxGroup,\n    //   attrs: {\n    //     type: 'checkbox-group',\n    //     className: 'checkbox-group',\n    //     name: 'checkbox-group'\n    //   }\n    // }, {\n    //   label: opts.messages.checkbox,\n    //   attrs: {\n    //     type: 'checkbox',\n    //     className: 'checkbox',\n    //     name: 'checkbox'\n    //   }\n    // }, {\n    //   label: opts.messages.button,\n    //   attrs: {\n    //     type: 'button',\n    //     className: 'button-input',\n    //     name: 'button'\n    //   }\n    // }, {\n    //   label: opts.messages.autocomplete,\n    //   attrs: {\n    //     type: 'autocomplete',\n    //     className: 'autocomplete',\n    //     name: 'autocomplete'\n    //   }\n    // }\n    ];\n\n    // frmbFields = _helpers.orderFields(frmbFields);\n\n    // remove disabledFields\n    // if (opts.disableFields) {\n    //   frmbFields = frmbFields.filter(function(field) {\n    //     return !opts.disableFields.inArray(field.attrs.type);\n    //   });\n    // }\n\n    // Create draggable fields for formBuilder\n\n    var cbUl = _helpers.markup('ul', null, { id: boxID, className: 'frmb-control' });\n\n    if (opts.sortableControls) {\n      cbUl.classList.add('sort-enabled');\n    }\n\n    var $cbUL = $(cbUl);\n\n    // Loop through\n    for (var i = frmbFields.length - 1; i >= 0; i--) {\n\n      var $field = $('<li/>', {\n        'class': 'icon-' + frmbFields[i].attrs.className,\n        'type': frmbFields[i].type,\n        'name': frmbFields[i].className,\n        'label': frmbFields[i].label\n      });\n\n      $field.data('newFieldData', frmbFields[i]);\n\n      var typeLabel = _helpers.markup('span', frmbFields[i].label);\n      $field.html(typeLabel).appendTo($cbUL);\n    }\n\n    var viewDataText = opts.dataType === 'xml' ? opts.messages.viewXML : opts.messages.viewJSON;\n\n    // Build our headers and action links\n    var viewData = _helpers.markup('button', viewDataText, {\n      id: frmbID + '-view-data',\n      type: 'button',\n      className: 'view-data btn btn-default'\n    }),\n        clearAll = _helpers.markup('button', opts.messages.clearAll, {\n      id: frmbID + '-clear-all',\n      type: 'button',\n      className: 'clear-all btn btn-default'\n    }),\n        saveAll = _helpers.markup('button', opts.messages.save, {\n      className: 'btn btn-primary ' + opts.prefix + 'save',\n      id: frmbID + '-save',\n      type: 'button'\n    }),\n        formActions = _helpers.markup('div', [clearAll, viewData, saveAll], {\n      className: 'form-actions btn-group'\n    }).outerHTML;\n\n    // Sortable fields\n    $sortableFields.sortable({\n      cursor: 'move',\n      opacity: 0.9,\n      revert: 150,\n      beforeStop: _helpers.beforeStop,\n      start: _helpers.startMoving,\n      stop: _helpers.stopMoving,\n      cancel: 'input, select, .disabled, .form-group, .btn',\n      placeholder: 'frmb-placeholder'\n    });\n\n    // ControlBox with different fields\n    $cbUL.sortable({\n      helper: 'clone',\n      opacity: 0.9,\n      connectWith: $sortableFields,\n      cursor: 'move',\n      placeholder: 'ui-state-highlight',\n      start: _helpers.startMoving,\n      stop: _helpers.stopMoving,\n      revert: 150,\n      beforeStop: _helpers.beforeStop,\n      update: function update(event, ui) {\n        if (_helpers.doCancel) {\n          return false;\n        }\n        event = event;\n        if (ui.item.parent()[0] === $sortableFields[0]) {\n          prepFieldVars(ui.item, true);\n          _helpers.doCancel = true;\n        } else {\n          _helpers.setFieldOrder($cbUL);\n          _helpers.doCancel = !opts.sortableControls;\n        }\n      }\n    });\n\n    var $stageWrap = $('<div/>', {\n      id: frmbID + '-stage-wrap',\n      'class': 'stage-wrap ' + formBuilder.layout.stage\n    });\n\n    var $formWrap = $('<div/>', {\n      id: frmbID + '-form-wrap',\n      'class': 'form-wrap form-builder' + _helpers.mobileClass()\n    });\n\n    elem.before($stageWrap).appendTo($stageWrap);\n\n    var cbWrap = $('<div/>', {\n      id: frmbID + '-cb-wrap',\n      'class': 'cb-wrap ' + formBuilder.layout.controls\n    }).append($cbUL[0], formActions);\n\n    $stageWrap.append($sortableFields, cbWrap);\n    $stageWrap.before($formWrap);\n    $formWrap.append($stageWrap, cbWrap);\n\n    var saveAndUpdate = _helpers.debounce(function (evt) {\n      if (evt) {\n        if (evt.type === 'keyup' && this.name === 'className') {\n          return false;\n        }\n      }\n\n      var $field = $(this).parents('.form-field:eq(0)');\n      _helpers.updatePreview($field);\n      _helpers.save();\n    });\n\n    // Save field on change\n    $sortableFields.on('change blur keyup', '.form-elements input, .form-elements select, .form-elements textarea', saveAndUpdate);\n\n    // Add append and prepend options if necessary\n    var nonEditableFields = function nonEditableFields() {\n      var cancelArray = [];\n\n      if (opts.prepend && !$('.disabled.prepend', $sortableFields).length) {\n        var prependedField = _helpers.markup('li', opts.prepend, { className: 'disabled prepend' });\n        cancelArray.push(true);\n        $sortableFields.prepend(prependedField);\n      }\n\n      if (opts.append && !$('.disabled.append', $sortableFields).length) {\n        var appendedField = _helpers.markup('li', opts.append, { className: 'disabled append' });\n        cancelArray.push(true);\n        $sortableFields.append(appendedField);\n      }\n\n      if (cancelArray.some(function (elem) {\n        return elem === true;\n      })) {\n        $stageWrap.removeClass('empty');\n      }\n    };\n\n    var prepFieldVars = function prepFieldVars($field) {\n      var isNew = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n\n      var field = {};\n\n      if ($field instanceof jQuery) {\n        var fieldData = $field.data('newFieldData');\n        if (fieldData) {\n          field = fieldData.attrs;\n          field.label = fieldData.label;\n        } else {\n          var attrs = $field[0].attributes;\n          if (!isNew) {\n            field.values = $field.children().map(function (index, elem) {\n              return {\n                label: $(elem).text(),\n                value: $(elem).attr('value'),\n                selected: Boolean($(elem).attr('selected'))\n              };\n            });\n          }\n          for (var i = attrs.length - 1; i >= 0; i--) {\n            field[attrs[i].name] = attrs[i].value;\n          }\n        }\n      } else {\n        field = $field;\n      }\n\n      field.label = _helpers.htmlEncode(field.label);\n      field.name = isNew ? nameAttr(field) : field.name;\n      field.role = field.role;\n      field.className = field.className || field.class;\n      field.required = field.required === 'true' || field.required === true;\n      field.maxlength = field.maxlength;\n      field.toggle = field.toggle;\n      field.multiple = field.type.match(/(checkbox-group)/);\n      field.description = field.description !== undefined ? _helpers.htmlEncode(field.description) : '';\n\n      var match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(field.className);\n      if (match) {\n        field.style = match[1];\n      }\n\n      appendNewField(field);\n      $stageWrap.removeClass('empty');\n    };\n\n    // Parse saved XML template data\n    var getXML = function getXML() {\n      var xml = '';\n      if (formBuilder.formData) {\n        xml = formBuilder.formData;\n      } else if (elem.val() !== '') {\n        xml = $.parseXML(formBuilder.element.value.trim());\n      } else {\n        xml = false;\n      }\n\n      var fields = $(xml).find('field');\n      if (fields.length > 0) {\n        formBuilder.formData = xml;\n        fields.each(function () {\n          prepFieldVars($(this));\n        });\n      } else if (!xml) {\n        // Load default fields if none are set\n        if (opts.defaultFields && opts.defaultFields.length) {\n          opts.defaultFields.reverse();\n          for (var i = opts.defaultFields.length - 1; i >= 0; i--) {\n            prepFieldVars(opts.defaultFields[i]);\n          }\n          $stageWrap.removeClass('empty');\n          _helpers.save();\n        } else if (!opts.prepend && !opts.append) {\n          $stageWrap.addClass('empty').attr('data-content', opts.messages.getStarted);\n        }\n      }\n\n      $('li.form-field:not(.disabled)', $sortableFields).each(function () {\n        _helpers.updatePreview($(this));\n      });\n\n      nonEditableFields();\n    };\n\n    var loadData = function loadData() {\n\n      var doLoadData = {\n        xml: getXML,\n        json: function json() {\n          console.log('coming soon');\n        }\n      };\n\n      doLoadData[opts.dataType]();\n    };\n\n    // callback to track disabled tooltips\n    $sortableFields.on('mousemove', 'li.disabled', function (e) {\n      $('.frmb-tt', this).css({\n        left: e.offsetX - 16,\n        top: e.offsetY - 34\n      });\n    });\n\n    // callback to call disabled tooltips\n    $sortableFields.on('mouseenter', 'li.disabled', function () {\n      _helpers.disabledTT.add($(this));\n    });\n\n    // callback to call disabled tooltips\n    $sortableFields.on('mouseleave', 'li.disabled', function () {\n      _helpers.disabledTT.remove($(this));\n    });\n\n    var nameAttr = function nameAttr(field) {\n      var epoch = new Date().getTime();\n      return field.type + '-' + epoch;\n    };\n\n    // multi-line textarea\n    var appendTextarea = function appendTextarea(values) {\n      appendFieldLi(opts.messages.textArea, advFields(values), values);\n    };\n\n    var appendInput = function appendInput(values) {\n      var type = values.type || 'text';\n      appendFieldLi(opts.messages[type], advFields(values), values);\n    };\n\n    /**\r\n     * Add data for field with options [select, checkbox-group, radio-group]\r\n     *\r\n     * @todo   refactor this nasty crap, its actually painful to look at\r\n     * @param  {object} values\r\n     */\n    var appendSelectList = function appendSelectList(values) {\n      if (!values.values || !values.values.length) {\n        values.values = [{\n          selected: true\n        }, {\n          selected: false\n        }];\n\n        values.values = values.values.map(function (elem, index) {\n          elem.label = opts.messages.option + ' ' + (index + 1);\n          elem.value = _helpers.hyphenCase(elem.label);\n          return elem;\n        });\n      }\n\n      var field = '';\n\n      field += advFields(values);\n      field += '<div class=\"form-group field-options\">';\n      field += '<label class=\"false-label\">' + opts.messages.selectOptions + '</label>';\n      field += '<div class=\"sortable-options-wrap\">';\n      if (values.type === 'select') {\n        field += '<div class=\"allow-multi\">';\n        field += '<input type=\"checkbox\" id=\"multiple_' + lastID + '\" name=\"multiple\"' + (values.multiple ? 'checked=\"checked\"' : '') + '>';\n        field += '<label class=\"multiple\" for=\"multiple_' + lastID + '\">' + opts.messages.selectionsMessage + '</label>';\n        field += '</div>';\n      }\n      field += '<ol class=\"sortable-options\">';\n      for (i = 0; i < values.values.length; i++) {\n        field += selectFieldOptions(values.name, values.values[i], values.values[i].selected, values.multiple);\n      }\n      field += '</ol>';\n      var addOption = _helpers.markup('a', opts.messages.addOption, { className: 'add add-opt' });\n      field += _helpers.markup('div', addOption, { className: 'option-actions' }).outerHTML;\n      field += '</div>';\n      field += '</div>';\n      appendFieldLi(opts.messages.select, field, values);\n\n      $('.sortable-options').sortable(); // making the dynamically added option fields sortable.\n    };\n\n    var appendNewField = function appendNewField(values) {\n\n      // TODO: refactor to move functions into this object\n      var appendFieldType = {\n        'select': appendSelectList,\n        'rich-text': appendTextarea,\n        'textarea': appendTextarea,\n        'radio-group': appendSelectList,\n        'checkbox-group': appendSelectList\n      };\n\n      values = values || '';\n\n      if (appendFieldType[values.type]) {\n        appendFieldType[values.type](values);\n      } else {\n        appendInput(values);\n      }\n    };\n\n    /**\r\n     * Build the editable properties for the field\r\n     * @param  {object} values configuration object for advanced fields\r\n     * @return {String}        markup for advanced fields\r\n     */\n    var advFields = function advFields(values) {\n      var advFields = [],\n          key,\n          roles = values.role !== undefined ? values.role.split(',') : [];\n\n      // var fieldLabelLabel = _helpers.markup('label', opts.messages.label);\n      // var fieldLabelInput = _helpers.markup('input', null, {\n      //   type: 'text',\n      //   name: 'label',\n      //   value: values.label,\n      //   className: 'fld-label form-control'\n      // });\n      // var fieldLabel = _helpers.markup('div', [fieldLabelLabel, fieldLabelInput], {\n      //   className: 'form-group label-wrap'\n      // });\n      advFields.push(textAttribute('label', values));\n\n      // advFields.push(fieldLabel.outerHTML);\n\n      values.size = values.size || 'm';\n      values.style = values.style || 'default';\n\n      advFields.push(fieldDescription(values));\n\n      advFields.push(subTypeField(values));\n\n      advFields.push(btnStyles(values.style, values.type));\n\n      // Placeholder\n      advFields.push(textAttribute('placeholder', values));\n      // Class\n      advFields.push(textAttribute('className', values));\n\n      advFields.push(textAttribute('name', values));\n\n      advFields.push('<div class=\"form-group access-wrap\"><label>' + opts.messages.roles + '</label>');\n\n      advFields.push('<input type=\"checkbox\" name=\"enable_roles\" value=\"\" ' + (values.role !== undefined ? 'checked' : '') + ' id=\"enable_roles-' + lastID + '\"/> <label for=\"enable_roles-' + lastID + '\" class=\"roles-label\">' + opts.messages.limitRole + '</label>');\n      advFields.push('<div class=\"available-roles\" ' + (values.role !== undefined ? 'style=\"display:block\"' : '') + '>');\n\n      for (key in opts.roles) {\n        if ($.inArray(key, ['date', '4']) === -1) {\n          advFields.push('<input type=\"checkbox\" name=\"roles[]\" value=\"' + key + '\" id=\"fld-' + lastID + '-roles-' + key + '\" ' + ($.inArray(key, roles) !== -1 ? 'checked' : '') + ' class=\"roles-field\" /><label for=\"fld-' + lastID + '-roles-' + key + '\">' + opts.roles[key] + '</label><br/>');\n        }\n      }\n      advFields.push('</div></div>');\n\n      advFields.push(textAttribute('maxlength', values));\n\n      return advFields.join('');\n    };\n\n    /**\r\n     * Description meta for field\r\n     *\r\n     * @param  {Object} values field values\r\n     * @return {String}        markup for attribute, @todo change to actual Node\r\n     */\n    var fieldDescription = function fieldDescription(values) {\n      var noDescFields = ['header', 'paragraph', 'button'],\n          noMakeAttr = [],\n          descriptionField = '';\n\n      noDescFields = noDescFields.concat(opts.messages.subtypes.header, opts.messages.subtypes.paragraph);\n\n      if (noDescFields.indexOf(values.type) === -1) {\n        noMakeAttr.push(true);\n      }\n\n      if (noMakeAttr.some(function (elem) {\n        return elem === true;\n      })) {\n        var fieldDescLabel = _helpers.markup('label', opts.messages.description, { 'for': 'description-' + lastID }),\n            fieldDescInput = _helpers.markup('input', null, {\n          type: 'text',\n          className: 'fld-description form-control',\n          name: 'description',\n          id: 'description-' + lastID,\n          value: values.description\n        }),\n            fieldDesc = _helpers.markup('div', [fieldDescLabel, fieldDescInput], {\n          'class': 'form-group description-wrap'\n        });\n        descriptionField = fieldDesc.outerHTML;\n      }\n\n      return descriptionField;\n    };\n\n    /**\r\n     * Changes a fields type\r\n     *\r\n     * @param  {Object} values\r\n     * @return {String}      markup for type <select> input\r\n     */\n    var subTypeField = function subTypeField(values) {\n      var subTypes = opts.messages.subtypes,\n          type = values.type,\n          subtype = values.subtype || '',\n          subTypeField = '',\n          selected = void 0;\n\n      if (subTypes[type]) {\n        var subTypeLabel = '<label>' + opts.messages.subtype + '</label>';\n        subTypeField += '<select name=\"subtype\" class=\"fld-subtype form-control\" id=\"subtype-' + lastID + '\">';\n        subTypes[type].forEach(function (element) {\n          selected = subtype === element ? 'selected' : '';\n          subTypeField += '<option value=\"' + element + '\" ' + selected + '>' + element + '</option>';\n        });\n        subTypeField += '</select>';\n        subTypeField = '<div class=\"form-group subtype-wrap\">' + subTypeLabel + ' ' + subTypeField + '</div>';\n      }\n\n      return subTypeField;\n    };\n\n    var btnStyles = function btnStyles(style, type) {\n      var tags = {\n        button: 'btn'\n      },\n          styles = opts.messages.styles[tags[type]],\n          styleField = '';\n\n      if (styles) {\n        var styleLabel = '<label>' + opts.messages.style + '</label>';\n        styleField += '<input value=\"' + style + '\" name=\"style\" type=\"hidden\" class=\"btn-style\">';\n        styleField += '<div class=\"btn-group\" role=\"group\">';\n\n        Object.keys(opts.messages.styles[tags[type]]).forEach(function (element) {\n          var active = style === element ? 'active' : '';\n          styleField += '<button value=\"' + element + '\" type=\"' + type + '\" class=\"' + active + ' btn-xs ' + tags[type] + ' ' + tags[type] + '-' + element + '\">' + opts.messages.styles[tags[type]][element] + '</button>';\n        });\n\n        styleField += '</div>';\n\n        styleField = '<div class=\"form-group style-wrap\">' + styleLabel + ' ' + styleField + '</div>';\n      }\n\n      return styleField;\n    };\n\n    /**\r\n     * Generate some text inputs for field attributes, **will be replaced**\r\n     * @param  {String} attribute\r\n     * @param  {Object} values\r\n     * @return {String}\r\n     */\n    var textAttribute = function textAttribute(attribute, values) {\n      var placeholderFields = ['text', 'textarea', 'select'];\n      var noName = ['header'];\n\n      var textArea = ['paragraph'];\n\n      var noMaxlength = ['checkbox', 'select', 'checkbox-group', 'date', 'autocomplete', 'radio-group', 'hidden', 'button', 'header'];\n\n      var attrVal = attribute === 'label' ? values.label : values[attribute] || '';\n      var attrLabel = opts.messages[attribute];\n      if (attribute === 'label' && textArea.inArray(values.type)) {\n        attrLabel = opts.messages.content;\n      }\n\n      noName = noName.concat(opts.messages.subtypes.header, textArea);\n      noMaxlength = noMaxlength.concat(textArea);\n\n      var placeholders = opts.messages.placeholders,\n          placeholder = placeholders[attribute] || '',\n          attributefield = '',\n          noMakeAttr = [];\n\n      // Field has placeholder attribute\n      if (attribute === 'placeholder' && !placeholderFields.inArray(values.type)) {\n        noMakeAttr.push(true);\n      }\n\n      // Field has name attribute\n      if (attribute === 'name' && noName.inArray(values.type)) {\n        noMakeAttr.push(true);\n      }\n\n      // Field has maxlength attribute\n      if (attribute === 'maxlength' && noMaxlength.inArray(values.type)) {\n        noMakeAttr.push(true);\n      }\n\n      if (!noMakeAttr.some(function (elem) {\n        return elem === true;\n      })) {\n        var attributeLabel = '<label>' + attrLabel + '</label>';\n\n        if (attribute === 'label' && textArea.inArray(values.type)) {\n          attributefield += '<textarea name=\"' + attribute + '\" placeholder=\"' + placeholder + '\" class=\"fld-' + attribute + ' form-control\" id=\"' + attribute + '-' + lastID + '\">' + attrVal + '</textarea>';\n        } else {\n          attributefield += '<input type=\"text\" value=\"' + attrVal + '\" name=\"' + attribute + '\" placeholder=\"' + placeholder + '\" class=\"fld-' + attribute + ' form-control\" id=\"' + attribute + '-' + lastID + '\">';\n        }\n\n        attributefield = '<div class=\"form-group ' + attribute + '-wrap\">' + attributeLabel + ' ' + attributefield + '</div>';\n      }\n\n      return attributefield;\n    };\n\n    var requiredField = function requiredField(values) {\n      var noRequire = ['header', 'paragraph', 'button'],\n          noMake = [],\n          requireField = '';\n\n      if (noRequire.inArray(values.type)) {\n        noMake.push(true);\n      }\n\n      if (!noMake.some(function (elem) {\n        return elem === true;\n      })) {\n\n        requireField += '<div class=\"form-group\">';\n        requireField += '<label>&nbsp;</label>';\n        var _requiredField = _helpers.markup('input', null, {\n          className: 'required',\n          type: 'checkbox',\n          name: 'required-' + lastID,\n          id: 'required-' + lastID,\n          value: 1\n        });\n\n        _requiredField.defaultChecked = values.required;\n\n        requireField += _requiredField.outerHTML;\n        requireField += _helpers.markup('label', opts.messages.required, {\n          className: 'required-label',\n          'for': 'required-' + lastID\n        }).outerHTML;\n        requireField += '</div>';\n      }\n      return requireField;\n    };\n\n    // Append the new field to the editor\n    var appendFieldLi = function appendFieldLi(title, field, values) {\n      var labelVal = $(field).find('input[name=\"label\"]').val(),\n          label = labelVal ? labelVal : title;\n\n      var delBtn = _helpers.markup('a', opts.messages.remove, {\n        id: 'del_' + lastID,\n        className: 'del-button btn delete-confirm',\n        title: opts.messages.removeMessage\n      }),\n          toggleBtn = _helpers.markup('a', null, {\n        id: lastID + '-edit',\n        className: 'toggle-form btn icon-pencil',\n        title: opts.messages.hide\n      }),\n          required = values.required,\n          toggle = values.toggle || undefined,\n          tooltip = values.description !== '' ? '<span class=\"tooltip-element\" tooltip=\"' + values.description + '\">?</span>' : '';\n\n      var liContents = _helpers.markup('div', [toggleBtn, delBtn], { className: 'field-actions' }).outerHTML;\n\n      liContents += '<label class=\"field-label\">' + label + '</label>' + tooltip + '<span class=\"required-asterisk\" ' + (required ? 'style=\"display:inline\"' : '') + '> *</span>';\n      liContents += _helpers.markup('div', '', { className: 'prev-holder' }).outerHTML;\n      liContents += '<div id=\"' + lastID + '-holder\" class=\"frm-holder\">';\n      liContents += '<div class=\"form-elements\">';\n\n      liContents += requiredField(values);\n\n      if (values.type === 'checkbox') {\n        liContents += '<div class=\"form-group\">';\n        liContents += '<label>&nbsp;</label>';\n        liContents += '<input class=\"checkbox-toggle\" type=\"checkbox\" value=\"1\" name=\"toggle-' + lastID + '\" id=\"toggle-' + lastID + '\"' + (toggle === 'true' ? ' checked' : '') + ' /><label class=\"toggle-label\" for=\"toggle-' + lastID + '\">' + opts.messages.toggle + '</label>';\n        liContents += '</div>';\n      }\n      liContents += field;\n      liContents += _helpers.markup('a', opts.messages.close, { className: 'close-field' }).outerHTML;\n\n      liContents += '</div>';\n      liContents += '</div>';\n\n      var li = _helpers.markup('li', liContents, {\n        'class': values.type + '-field form-field',\n        'type': values.type,\n        id: lastID\n      }),\n          $li = $(li);\n\n      $li.data('fieldData', { attrs: values });\n\n      if (typeof _helpers.stopIndex !== 'undefined') {\n        $('> li', $sortableFields).eq(_helpers.stopIndex).after($li);\n      } else {\n        $sortableFields.append($li);\n      }\n\n      _helpers.updatePreview($li);\n\n      $(document.getElementById('frm-' + lastID + '-item')).hide().slideDown(250);\n\n      lastID = _helpers.incrementId(lastID);\n    };\n\n    // Select field html, since there may be multiple\n    var selectFieldOptions = function selectFieldOptions(name, values, selected, multipleSelect) {\n      var optionInputType = {\n        selected: multipleSelect ? 'checkbox' : 'radio'\n      };\n\n      var defaultOptionData = {\n        selected: selected,\n        label: '',\n        value: ''\n      };\n\n      var optionData = Object.assign(defaultOptionData, values),\n          optionInputs = [];\n\n      for (var prop in optionData) {\n        if (optionData.hasOwnProperty(prop)) {\n          var attrs = {\n            type: optionInputType[prop] || 'text',\n            'class': 'option-' + prop,\n            placeholder: opts.messages.placeholders[prop],\n            value: optionData[prop],\n            name: name\n          };\n          var option = _helpers.markup('input', null, attrs);\n          if (prop === 'selected') {\n            option.checked = optionData.selected;\n          }\n          optionInputs.push(option);\n        }\n      }\n\n      var removeAttrs = {\n        className: 'remove btn',\n        title: opts.messages.removeMessage\n      };\n      optionInputs.push(_helpers.markup('a', opts.messages.remove, removeAttrs));\n\n      var field = _helpers.markup('li', optionInputs);\n\n      return field.outerHTML;\n    };\n\n    // ---------------------- UTILITIES ---------------------- //\n\n    // delete options\n    $sortableFields.on('click touchstart', '.remove', function (e) {\n      var $field = $(this).parents('.form-field:eq(0)');\n      e.preventDefault();\n      var optionsCount = $(this).parents('.sortable-options:eq(0)').children('li').length;\n      if (optionsCount <= 2) {\n        opts.notify.error('Error: ' + opts.messages.minOptionMessage);\n      } else {\n        $(this).parent('li').slideUp('250', function () {\n          $(this).remove();\n        });\n      }\n      saveAndUpdate.call($field);\n    });\n\n    // touch focus\n    $sortableFields.on('touchstart', 'input', function (e) {\n      if (e.handled !== true) {\n        if ($(this).attr('type') === 'checkbox') {\n          $(this).trigger('click');\n        } else {\n          $(this).focus();\n          var fieldVal = $(this).val();\n          $(this).val(fieldVal);\n        }\n      } else {\n        return false;\n      }\n    });\n\n    // toggle fields\n    $sortableFields.on('click touchstart', '.toggle-form', function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      if (e.handled !== true) {\n        var targetID = $(this).parents('.form-field:eq(0)').attr('id');\n        _helpers.toggleEdit(targetID);\n        e.handled = true;\n      } else {\n        return false;\n      }\n    });\n\n    /**\r\n     * Toggles the edit mode for the given field\r\n     * @param  {String} fieldId\r\n     */\n    _helpers.toggleEdit = function (fieldId) {\n      var field = document.getElementById(fieldId),\n          toggleBtn = $('.toggle-form', field),\n          editMode = $('.frm-holder', field);\n      field.classList.toggle('editing');\n      toggleBtn.toggleClass('open');\n      $('.prev-holder', field).slideToggle(250);\n      editMode.slideToggle(250);\n    };\n\n    // update preview to label\n    $sortableFields.on('keyup change', '[name=\"label\"]', function () {\n      $('.field-label', $(this).closest('li')).text($(this).val());\n    });\n\n    // remove error styling when users tries to correct mistake\n    $sortableFields.delegate('input.error', 'keyup', function () {\n      $(this).removeClass('error');\n    });\n\n    // update preview for description\n    $sortableFields.on('keyup', 'input[name=\"description\"]', function () {\n      var $field = $(this).parents('.form-field:eq(0)');\n      var closestToolTip = $('.tooltip-element', $field);\n      var ttVal = $(this).val();\n      if (ttVal !== '') {\n        if (!closestToolTip.length) {\n          var tt = '<span class=\"tooltip-element\" tooltip=\"' + ttVal + '\">?</span>';\n          $('.field-label', $field).after(tt);\n        } else {\n          closestToolTip.attr('tooltip', ttVal).css('display', 'inline-block');\n        }\n      } else {\n        if (closestToolTip.length) {\n          closestToolTip.css('display', 'none');\n        }\n      }\n    });\n\n    _helpers.updateMultipleSelect();\n\n    // format name attribute\n    $sortableFields.delegate('input[name=\"name\"]', 'keyup', function () {\n      $(this).val(_helpers.safename($(this).val()));\n      if ($(this).val() === '') {\n        $(this).addClass('field_error').attr('placeholder', opts.messages.cannotBeEmpty);\n      } else {\n        $(this).removeClass('field_error');\n      }\n    });\n\n    $sortableFields.delegate('input.fld-maxlength', 'keyup', function () {\n      $(this).val(_helpers.forceNumber($(this).val()));\n    });\n\n    // Delete field\n    $sortableFields.on('click touchstart', '.delete-confirm', function (e) {\n      e.preventDefault();\n\n      var buttonPosition = this.getBoundingClientRect(),\n          bodyRect = document.body.getBoundingClientRect(),\n          coords = {\n        pageX: buttonPosition.left + buttonPosition.width / 2,\n        pageY: buttonPosition.top - bodyRect.top - 12\n      };\n\n      var deleteID = $(this).parents('.form-field:eq(0)').attr('id'),\n          $field = $(document.getElementById(deleteID));\n\n      var removeField = function removeField() {\n        $field.slideUp(250, function () {\n          $field.removeClass('deleting');\n          $field.remove();\n          _helpers.save();\n          if (!$sortableFields[0].childNodes.length) {\n            $stageWrap.addClass('empty').attr('data-content', opts.messages.getStarted);\n          }\n        });\n      };\n\n      document.addEventListener('modalClosed', function () {\n        $field.removeClass('deleting');\n      }, false);\n\n      // Check if user is sure they want to remove the field\n      if (opts.fieldRemoveWarn) {\n        var warnH3 = _helpers.markup('h3', opts.messages.warning),\n            warnMessage = _helpers.markup('p', opts.messages.fieldRemoveWarning);\n        _helpers.confirm([warnH3, warnMessage], removeField, coords);\n        $field.addClass('deleting');\n      } else {\n        removeField($field);\n      }\n    });\n\n    // Update button style selection\n    $sortableFields.on('click', '.style-wrap button', function () {\n      var styleVal = $(this).val(),\n          $parent = $(this).parent(),\n          $btnStyle = $parent.prev('.btn-style');\n      $btnStyle.val(styleVal);\n      $(this).siblings('.btn').removeClass('active');\n      $(this).addClass('active');\n      saveAndUpdate.call($parent);\n    });\n\n    // Attach a callback to toggle required asterisk\n    $sortableFields.on('click', 'input.required', function () {\n      var requiredAsterisk = $(this).parents('li.form-field').find('.required-asterisk');\n      requiredAsterisk.toggle();\n    });\n\n    // Attach a callback to toggle roles visibility\n    $sortableFields.on('click', 'input[name=\"enable_roles\"]', function () {\n      var roles = $(this).siblings('div.available-roles'),\n          enableRolesCB = $(this);\n      roles.slideToggle(250, function () {\n        if (!enableRolesCB.is(':checked')) {\n          $('input[type=\"checkbox\"]', roles).removeAttr('checked');\n        }\n      });\n    });\n\n    // Attach a callback to add new options\n    $sortableFields.on('click', '.add-opt', function (e) {\n      e.preventDefault();\n      var $optionWrap = $(this).parents('.field-options:eq(0)'),\n          $multiple = $('[name=\"multiple\"]', $optionWrap),\n          $firstOption = $('.option-selected:eq(0)', $optionWrap),\n          isMultiple = false;\n\n      if ($multiple.length) {\n        isMultiple = $multiple.prop('checked');\n      } else {\n        isMultiple = $firstOption.attr('type') === 'checkbox';\n      }\n\n      var name = $firstOption.attr('name');\n\n      $('.sortable-options', $optionWrap).append(selectFieldOptions(name, false, false, isMultiple));\n      _helpers.updateMultipleSelect();\n    });\n\n    // Attach a callback to close link\n    $sortableFields.on('click touchstart', '.close-field', function () {\n      var fieldId = $(this).parents('li.form-field:eq(0)').attr('id');\n      _helpers.toggleEdit(fieldId);\n    });\n\n    $sortableFields.on('mouseover mouseout', '.remove, .del-button', function () {\n      $(this).parents('li:eq(0)').toggleClass('delete');\n    });\n\n    // View XML\n    var xmlButton = $(document.getElementById(frmbID + '-view-data'));\n    xmlButton.click(function (e) {\n      e.preventDefault();\n      var xml = _helpers.htmlEncode(elem.val()),\n          code = _helpers.markup('code', xml, { className: 'xml' }),\n          pre = _helpers.markup('pre', code);\n      _helpers.dialog(pre, null, 'data-dialog');\n    });\n\n    // Clear all fields in form editor\n    var clearButton = $(document.getElementById(frmbID + '-clear-all'));\n    clearButton.click(function () {\n      var fields = $('li.form-field');\n      var buttonPosition = this.getBoundingClientRect(),\n          bodyRect = document.body.getBoundingClientRect(),\n          coords = {\n        pageX: buttonPosition.left + buttonPosition.width / 2,\n        pageY: buttonPosition.top - bodyRect.top - 12\n      };\n\n      if (fields.length) {\n        _helpers.confirm(opts.messages.clearAllMessage, function () {\n          _helpers.removeAllfields();\n          opts.notify.success(opts.messages.allFieldsRemoved);\n          _helpers.save();\n        }, coords);\n      } else {\n        _helpers.dialog('There are no fields to clear', { pageX: coords.pageX, pageY: coords.pageY });\n      }\n    });\n\n    // Save Idea Template\n    $(document.getElementById(frmbID + '-save')).click(function (e) {\n      e.preventDefault();\n      _helpers.save();\n      _helpers.validateForm(e);\n    });\n\n    elem.parent().find('p[id*=\"ideaTemplate\"]').remove();\n    elem.wrap('<div class=\"template-textarea-wrap\"/>');\n\n    loadData();\n\n    $sortableFields.css('min-height', $cbUL.height());\n\n    document.dispatchEvent(formBuilder.events.loaded);\n\n    return formBuilder;\n  };\n\n  $.fn.formBuilder = function (options) {\n    return this.each(function () {\n      var element = this,\n          formBuilder;\n      if ($(element).data('formBuilder')) {\n        var existingFormBuilder = $(element).parents('.form-builder:eq(0)');\n        var newElement = $(element).clone();\n        existingFormBuilder.before(newElement);\n        existingFormBuilder.remove();\n        formBuilder = new FormBuilder(options, newElement[0]);\n        newElement.data('formBuilder', formBuilder);\n      } else {\n        formBuilder = new FormBuilder(options, element);\n        $(element).data('formBuilder', formBuilder);\n      }\n    });\n  };\n})(jQuery);\n'use strict';\n\n// toXML is a jQuery plugin that turns our form editor into XML\n// @todo this is a total mess that has to be refactored\n(function ($) {\n  'use strict';\n\n  $.fn.toXML = function (_helpers) {\n\n    var serialStr = '';\n\n    var fieldOptions = function fieldOptions($field) {\n      var options = [];\n      $('.sortable-options li', $field).each(function () {\n        var $option = $(this),\n            attrs = {\n          value: $('.option-value', $option).val(),\n          selected: $('.option-selected', $option).is(':checked')\n        },\n            option = _helpers.markup('option', $('.option-label', $option).val(), attrs).outerHTML;\n        options.push('\\n\\t\\t\\t' + option);\n      });\n      return options.join('') + '\\n\\t\\t';\n    };\n\n    // Begin the core plugin\n    this.each(function () {\n      var sortableFields = this;\n      if (sortableFields.childNodes.length >= 1) {\n        serialStr += '<form-template>\\n\\t<fields>';\n        // build new xml\n        sortableFields.childNodes.forEach(function (field) {\n          var $field = $(field);\n          var fieldData = $field.data('fieldData');\n\n          if (!$field.hasClass('disabled')) {\n            var roleVals = field.querySelectorAll('.roles-field:checked').map(function (n) {\n              return n.value;\n            }).join(',');\n\n            var types = _helpers.getTypes($field);\n            var xmlAttrs = {\n              className: fieldData.className,\n              description: $('input.fld-description', $field).val(),\n              label: $('.fld-label', $field).val(),\n              maxlength: $('input.fld-maxlength', $field).val(),\n              multiple: $('input[name=\"multiple\"]', $field).is(':checked'),\n              name: $('input.fld-name', $field).val(),\n              placeholder: $('input.fld-placeholder', $field).val(),\n              required: $('input.required', $field).is(':checked'),\n              role: roleVals,\n              toggle: $('.checkbox-toggle', $field).is(':checked'),\n              type: types.type,\n              subtype: types.subtype\n            };\n            xmlAttrs = _helpers.trimAttrs(xmlAttrs);\n            xmlAttrs = _helpers.escapeAttrs(xmlAttrs);\n            var multipleField = xmlAttrs.type.match(/(select|checkbox-group|radio-group)/);\n\n            var fieldContent = '',\n                xmlField;\n            if (multipleField) {\n              fieldContent = fieldOptions($field);\n            }\n\n            xmlField = _helpers.markup('field', fieldContent, xmlAttrs);\n            serialStr += '\\n\\t\\t' + xmlField.outerHTML;\n          }\n        });\n        serialStr += '\\n\\t</fields>\\n</form-template>';\n      } // if \"$(this).children().length >= 1\"\n    });\n\n    return serialStr;\n  };\n})(jQuery);\n'use strict';\n\n// Polyfill for Object.assign\n\nif (typeof Object.assign !== 'function') {\n  (function () {\n    Object.assign = function (target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n      return output;\n    };\n  })();\n}\n\n// Element.remove() polyfill\nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\n// Event polyfill\nif (typeof Event !== 'function') {\n  (function () {\n    window.Event = function (evt) {\n      var event = document.createEvent('Event');\n      event.initEvent(evt, true, true);\n      return event;\n    };\n  })();\n}\n\n/**\n * Nice syntax for testing if element is in array\n * @param  {String|Object} needle\n * @return {Boolean}\n */\nArray.prototype.inArray = function (needle) {\n  return this.indexOf(needle) !== -1;\n};\n\n/**\n * Remove duplicates from an array of elements\n * @param  {array} arrArg array with possible duplicates\n * @return {array}        array with only unique values\n */\nArray.prototype.unique = function () {\n  return this.filter(function (elem, pos, arr) {\n    return arr.indexOf(elem) === pos;\n  });\n};\n\n// Remove specific values from array. use sparingly\nArray.prototype.remove = function () {\n  var what,\n      a = arguments,\n      L = a.length,\n      ax;\n  while (L && this.length) {\n    what = a[--L];\n    while ((ax = this.indexOf(what)) !== -1) {\n      this.splice(ax, 1);\n    }\n  }\n  return this;\n};\n\n// Lets us loop and map through NodeLists\nNodeList.prototype.forEach = Array.prototype.forEach;\nNodeList.prototype.map = Array.prototype.map;","function formBuilderHelpersFn(opts, formBuilder) {\n  'use strict';\n\n  var _helpers = {\n    doCancel: false\n  };\n\n  formBuilder.events = formBuilderEventsFn();\n\n  /**\n   * Convert an attrs object into a string\n   *\n   * @param  {Object} attrs object of attributes for markup\n   * @return {string}\n   */\n  _helpers.attrString = function(attrs) {\n    var attributes = [];\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        attr = _helpers.safeAttr(attr, attrs[attr]);\n        attributes.push(attr.name + attr.value);\n      }\n    }\n    var attrString = attributes.join(' ');\n    return attrString;\n  };\n\n  /**\n   * Convert camelCase into lowercase-hyphen\n   *\n   * @param  {string} str\n   * @return {string}\n   */\n  _helpers.hyphenCase = (str) => {\n    str = str.replace(/([A-Z])/g, function($1) {\n      return '-' + $1.toLowerCase();\n    });\n\n    return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n  };\n\n  /**\n   * Convert converts messy `cl#ssNames` into valid `class-names`\n   *\n   * @param  {string} str\n   * @return {string}\n   */\n  _helpers.makeClassName = (str) => {\n    str = str.replace(/[^\\w\\s\\-]/gi, '');\n    return _helpers.hyphenCase(str);\n  };\n\n  _helpers.safeAttrName = function(name) {\n    let safeAttr = {\n      className: 'class'\n    };\n\n    return safeAttr[name] || _helpers.hyphenCase(name);\n  };\n\n  _helpers.safeAttr = function(name, value) {\n    name = _helpers.safeAttrName(name);\n\n    let valString = window.JSON.stringify(HTML_ENTITIES.encode(value));\n\n    value = value ? `=${valString}` : '';\n    return {\n      name,\n      value\n    };\n  };\n\n  /**\n   * Add a mobile class\n   *\n   * @return {string}\n   */\n  _helpers.mobileClass = function() {\n    var mobileClass = '';\n    (function(a) {\n      if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n        mobileClass = ' fb-mobile';\n      }\n    })(navigator.userAgent || navigator.vendor || window.opera);\n    return mobileClass;\n  };\n\n  /**\n   * Callback for when a drag begins\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.startMoving = function(event, ui) {\n    event = event;\n    ui.item.show().addClass('moving');\n    _helpers.startIndex = $('li', this).index(ui.item);\n  };\n\n  /**\n   * Callback for when a drag ends\n   *\n   * @param  {Object} event\n   * @param  {Object} ui\n   */\n  _helpers.stopMoving = function(event, ui) {\n    event = event;\n    ui.item.removeClass('moving');\n    if (_helpers.doCancel) {\n      $(ui.sender).sortable('cancel');\n      $(this).sortable('cancel');\n    }\n    _helpers.save();\n    _helpers.doCancel = false;\n  };\n\n  /**\n   * jQuery UI sortable beforeStop callback used for both lists.\n   * Logic for canceling the sort or drop.\n   */\n  _helpers.beforeStop = function(event, ui) {\n    event = event;\n\n    var form = document.getElementById(opts.formID),\n      lastIndex = form.children.length - 1,\n      cancelArray = [];\n    _helpers.stopIndex = ui.placeholder.index() - 1;\n\n    if (!opts.sortableControls && ui.item.parent().hasClass('frmb-control')) {\n      cancelArray.push(true);\n    }\n\n    if (opts.prepend) {\n      cancelArray.push(_helpers.stopIndex === 0);\n    }\n\n    if (opts.append) {\n      cancelArray.push((_helpers.stopIndex + 1) === lastIndex);\n    }\n\n    _helpers.doCancel = cancelArray.some(elem => elem === true);\n  };\n\n  /**\n   * Make strings safe to be used as classes\n   *\n   * @param  {string} str string to be converted\n   * @return {string}     converter string\n   */\n  _helpers.safename = function(str) {\n    return str.replace(/\\s/g, '-').replace(/[^a-zA-Z0-9\\-]/g, '').toLowerCase();\n  };\n\n  /**\n   * Strips non-numbers from a number only input\n   *\n   * @param  {string} str string with possible number\n   * @return {string}     string without numbers\n   */\n  _helpers.forceNumber = function(str) {\n    return str.replace(/[^0-9]/g, '');\n  };\n\n  /**\n   * hide and show mouse tracking tooltips, only used for disabled\n   * fields in the editor.\n   *\n   * @todo   remove or refactor to make better use\n   * @param  {Object} tt jQuery option with nexted tooltip\n   * @return {void}\n   */\n  _helpers.initTooltip = function(tt) {\n    var tooltip = tt.find('.tooltip');\n    tt.mouseenter(function() {\n      if (tooltip.outerWidth() > 200) {\n        tooltip.addClass('max-width');\n      }\n      tooltip.css('left', tt.width() + 14);\n      tooltip.stop(true, true).fadeIn('fast');\n    }).mouseleave(function() {\n      tt.find('.tooltip').stop(true, true).fadeOut('fast');\n    });\n    tooltip.hide();\n  };\n\n  /**\n   * Attempts to get element type and subtype\n   *\n   * @param  {Object} $field\n   * @return {Object}\n   */\n  _helpers.getTypes = function($field) {\n    return {\n      type: $field.attr('type'),\n      subtype: $('.fld-subtype', $field).val()\n    };\n  };\n\n  // Remove null or undefined values\n  _helpers.trimAttrs = function(attrs) {\n    let xmlRemove = [\n      null,\n      undefined,\n      '',\n      false\n    ];\n    for (var i in attrs) {\n      if (xmlRemove.inArray(attrs[i])) {\n        delete attrs[i];\n      }\n    }\n    return attrs;\n  };\n\n  // Remove null or undefined values\n  _helpers.escapeAttrs = function(attrs) {\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        attrs[attr] = HTML_ENTITIES.encode(attrs[attr]);\n      }\n    }\n\n    return attrs;\n  };\n\n  /**\n   * XML save\n   *\n   * @param  {Object} form sortableFields node\n   */\n  _helpers.xmlSave = function(form) {\n    let formDataNew = $(form).toXML(_helpers);\n    if (window.JSON.stringify(formDataNew) === window.JSON.stringify(formBuilder.formData)) {\n      return false;\n    }\n    formBuilder.formData = formDataNew;\n  };\n\n  _helpers.jsonSave = function() {\n    opts.notify.warning('json data not available yet');\n  };\n\n  /**\n   * Saves and returns formData\n   * @return {XML|JSON}\n   */\n  _helpers.save = function() {\n    var element = _helpers.getElement(),\n      form = document.getElementById(opts.formID),\n      formData;\n\n    let doSave = {\n      xml: _helpers.xmlSave,\n      json: _helpers.jsonSave\n    };\n\n    // save action for current `dataType`\n    formData = doSave[opts.dataType](form);\n\n    if (element) {\n      element.value = formBuilder.formData;\n      if (window.jQuery) {\n        $(element).trigger('change');\n      } else {\n        element.onchange();\n      }\n    }\n\n    //trigger formSaved event\n    document.dispatchEvent(formBuilder.events.formSaved);\n    return formData;\n  };\n\n  /**\n   * Attempts to find an element,\n   * useful if formBuilder was called without Query\n   * @return {Object}\n   */\n  _helpers.getElement = () => {\n    let element = false;\n    if (formBuilder.element) {\n      element = formBuilder.element;\n\n      if (!element.id) {\n        _helpers.makeId(element);\n      }\n\n      if (!element.onchange) {\n        element.onchange = function() {\n          opts.notify.success(opts.messages.formUpdated);\n        };\n      }\n    }\n\n    return element;\n  };\n\n  /**\n   * increments the field ids with support for multiple editors\n   * @param  {String} id field ID\n   * @return {String}    incremented field ID\n   */\n  _helpers.incrementId = function(id) {\n    var split = id.lastIndexOf('-'),\n      newFieldNumber = parseInt(id.substring(split + 1)) + 1,\n      baseString = id.substring(0, split);\n\n    return `${baseString}-${newFieldNumber}`;\n  };\n\n  _helpers.makeId = function(element = false) {\n    let epoch = new Date().getTime();\n\n    return `${element.tagName}-${epoch}`;\n  };\n\n  /**\n   * Collect field attribute values and call fieldPreview to generate preview\n   * @param  {Object} field jQuery wrapped dom object @todo, remove jQuery dependency\n   */\n  _helpers.updatePreview = function(field) {\n    var fieldData = field.data('fieldData') || {};\n    var fieldClass = field.attr('class');\n    if (fieldClass.indexOf('ui-sortable-handle') !== -1) {\n      return;\n    }\n\n    var fieldType = $(field).attr('type'),\n      $prevHolder = $('.prev-holder', field),\n      previewData = {\n        label: $('.fld-label', field).val(),\n        type: fieldType\n      },\n      preview;\n\n    let subtype = $('.fld-subtype', field).val();\n    if (subtype) {\n      previewData.subtype = subtype;\n    }\n\n    let maxlength = $('.fld-maxlength', field).val();\n    if (maxlength) {\n      previewData.maxlength = maxlength;\n    }\n\n    previewData.className = $('.fld-className', field).val() || fieldData.className || '';\n\n    let placeholder = $('.fld-placeholder', field).val();\n    if (placeholder) {\n      previewData.placeholder = placeholder;\n    }\n\n    let style = $('.btn-style', field).val();\n    if (style) {\n      previewData.style = style;\n    }\n\n    if (fieldType === 'checkbox') {\n      previewData.toggle = $('.checkbox-toggle', field).is(':checked');\n    }\n\n    if (fieldType.match(/(select|checkbox-group|radio-group)/)) {\n      previewData.values = [];\n      previewData.multiple = $('[name=\"multiple\"]', field).is(':checked');\n\n      $('.sortable-options li', field).each(function() {\n        let option = {};\n        option.selected = $('.option-selected', this).is(':checked');\n        option.value = $('.option-value', this).val();\n        option.label = $('.option-label', this).val();\n        previewData.values.push(option);\n      });\n    }\n\n    previewData.className = _helpers.classNames(field, previewData);\n    $('.fld-className', field).val(previewData.className);\n\n    field.data('fieldData', previewData);\n    preview = _helpers.fieldPreview(previewData);\n\n    $prevHolder.html(preview);\n\n    $('input[toggle]', $prevHolder).kcToggle();\n  };\n\n  /**\n   * Generate preview markup\n   *\n   * @todo   make this smarter and use tags\n   * @param  {Object} attrs\n   * @return {String}       preview markup for field\n   */\n  _helpers.fieldPreview = function(attrs) {\n    var i,\n      preview = '',\n      epoch = new Date().getTime();\n    attrs = Object.assign({}, attrs);\n    attrs.type = attrs.subtype || attrs.type;\n    let toggle = attrs.toggle ? 'toggle' : '';\n    // attrs = _helpers.escapeAttrs(attrs);\n    let attrsString = _helpers.attrString(attrs);\n\n    switch (attrs.type) {\n      case 'textarea':\n      case 'rich-text':\n        preview = `<textarea ${attrsString}></textarea>`;\n        break;\n      case 'button':\n      case 'submit':\n        preview = `<button ${attrsString}>${attrs.label}</button>`;\n        break;\n      case 'select':\n        let options = '',\n          multiple = attrs.multiple ? 'multiple' : '';\n        attrs.values.reverse();\n        if (attrs.placeholder) {\n          options += `<option disabled selected>${attrs.placeholder}</option>`;\n        }\n        for (i = attrs.values.length - 1; i >= 0; i--) {\n          let selected = (attrs.values[i].selected && !attrs.placeholder) ? 'selected' : '';\n          options += `<option value=\"${attrs.values[i].value}\" ${selected}>${attrs.values[i].label}</option>`;\n        }\n        preview = `<${attrs.type} class=\"${attrs.className}\" ${multiple}>${options}</${attrs.type}>`;\n        break;\n      case 'checkbox-group':\n      case 'radio-group':\n        let type = attrs.type.replace('-group', ''),\n          optionName = type + '-' + epoch;\n        attrs.values.reverse();\n        for (i = attrs.values.length - 1; i >= 0; i--) {\n          let checked = attrs.values[i].selected ? 'checked' : '';\n          let optionId = `${type}-${epoch}-${i}`;\n          preview += `<div><input type=\"${type}\" class=\"${attrs.className}\" name=\"${optionName}\" id=\"${optionId}\" value=\"${attrs.values[i].value}\" ${checked}/><label for=\"${optionId}\">${attrs.values[i].label}</label></div>`;\n        }\n        break;\n      case 'text':\n      case 'password':\n      case 'email':\n      case 'date':\n      case 'file':\n        preview = `<input ${attrsString}>`;\n        break;\n      case 'color':\n        preview = `<input type=\"${attrs.type}\" class=\"${attrs.className}\"> ${opts.messages.selectColor}`;\n        break;\n      case 'hidden':\n      case 'checkbox':\n        preview = `<input type=\"${attrs.type}\" ${toggle} >`;\n        break;\n      case 'autocomplete':\n        preview = `<input class=\"ui-autocomplete-input ${attrs.className}\" autocomplete=\"on\">`;\n        break;\n      default:\n        preview = `<${attrs.type}>${attrs.label}</${attrs.type}>`;\n    }\n\n    return preview;\n  };\n\n  // update preview to label\n  _helpers.updateMultipleSelect = function() {\n    $(document.getElementById(opts.formID)).on('change', 'input[name=\"multiple\"]', function() {\n      var options = $(this).parents('.field-options:eq(0)').find('.sortable-options input.option-selected');\n      if (this.checked) {\n        options.each(function() {\n          $(this).prop('type', 'checkbox');\n        });\n      } else {\n        options.each(function() {\n          $(this).removeAttr('checked').prop('type', 'radio');\n        });\n      }\n    });\n  };\n\n  _helpers.debounce = function(func, wait = 250, immediate = false) {\n    var timeout;\n    return function() {\n      var context = this,\n        args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  };\n\n  _helpers.htmlEncode = function(value) {\n    return $('<div/>').text(value).html();\n  };\n\n  _helpers.htmlDecode = function(value) {\n    return $('<div/>').html(value).text();\n  };\n\n  _helpers.validateForm = function() {\n    var $form = $(document.getElementById(opts.formID));\n\n    var errors = [];\n    // check for empty field labels\n    $('input[name=\"label\"], input[type=\"text\"].option', $form).each(function() {\n      if ($(this).val() === '') {\n        var field = $(this).parents('li.form-field'),\n          fieldAttr = $(this);\n        errors.push({\n          field: field,\n          error: opts.messages.labelEmpty,\n          attribute: fieldAttr\n        });\n      }\n    });\n\n    // @todo add error = { noVal: opts.messages.labelEmpty }\n    if (errors.length) {\n      alert('Error: ' + errors[0].error);\n      $('html, body').animate({\n        scrollTop: errors[0].field.offset().top\n      }, 1000, function() {\n        var targetID = $('.toggle-form', errors[0].field).attr('id');\n        $('.toggle-form', errors[0].field).addClass('open').parent().next('.prev-holder').slideUp(250);\n        $('#' + targetID + '-fld').slideDown(250, function() {\n          errors[0].attribute.addClass('error');\n        });\n      });\n    }\n  };\n\n  /**\n   * Display a custom tooltip for disabled fields.\n   *\n   * @param  {Object} field\n   */\n  _helpers.disabledTT = {\n    className: 'frmb-tt',\n    add: function(field) {\n      let title = opts.messages.fieldNonEditable;\n\n      if (title) {\n        var tt = _helpers.markup('p', title, { className: _helpers.disabledTT.className });\n        field.append(tt);\n      }\n    },\n    remove: function(field) {\n      $('.frmb-tt', field).remove();\n    }\n  };\n\n  _helpers.classNames = function(field, previewData) {\n    let noFormControl = [\n        'checkbox',\n        'checkbox-group',\n        'radio-group'\n      ],\n      blockElements = ['header', 'paragraph', 'button'],\n      i;\n\n    for (i = blockElements.length - 1; i >= 0; i--) {\n      blockElements = blockElements.concat(opts.messages.subtypes[blockElements[i]]);\n    }\n\n    noFormControl = noFormControl.concat(blockElements);\n\n    let type = previewData.type;\n    let style = previewData.style;\n    let className = field[0].querySelector('.fld-className').value;\n    let classes = [].concat(className.split(' ')).reverse();\n    let types = {\n      button: 'btn',\n      submit: 'btn'\n    };\n\n    let primaryType = types[type];\n\n    if (primaryType) {\n      if (style) {\n        for (i = classes.length - 1; i >= 0; i--) {\n          let re = new RegExp('(?:^|\\s)' + primaryType + '-(.*?)(?:\\s|$)+', 'g');\n          let match = classes[i].match(re);\n          if (match) {\n            classes.splice(i, 1);\n          }\n        }\n        classes.push(primaryType + '-' + style);\n      }\n      classes.push(primaryType);\n    } else if (!noFormControl.inArray(type)) {\n      classes.push('form-control');\n    }\n\n    // reverse the array to put custom classes at end, remove any duplicates, convert to string, remove whitespace\n    return classes.reverse().unique().join(' ').trim();\n  };\n\n  _helpers.markup = function(tag, content = '', attrs = {}) {\n    let contentType,\n      field = document.createElement(tag),\n      getContentType = function(content) {\n        return Array.isArray(content) ? 'array' : typeof content;\n      },\n      appendContent = {\n        string: function(content) {\n          field.innerHTML = content;\n        },\n        object: function(content) {\n          return field.appendChild(content);\n        },\n        array: function(content) {\n          for (var i = 0; i < content.length; i++) {\n            contentType = getContentType(content[i]);\n            appendContent[contentType](content[i]);\n          }\n        }\n      };\n\n    for (var attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        if (attrs[attr]) {\n          let name = _helpers.safeAttrName(attr);\n          field.setAttribute(name, attrs[attr]);\n        }\n      }\n    }\n\n    contentType = getContentType(content);\n\n    if (content) {\n      appendContent[contentType].call(this, content);\n    }\n\n    return field;\n  };\n\n  /**\n   * Closes and open dialog\n   *\n   * @param  {Object} overlay Existing overlay if there is one\n   * @param  {Object} dialog  Existing dialog\n   * @return {Event}          Triggers modalClosed event\n   */\n  _helpers.closeConfirm = function(overlay, dialog) {\n    overlay = overlay || document.getElementsByClassName('form-builder-overlay')[0];\n    dialog = dialog || document.getElementsByClassName('form-builder-dialog')[0];\n    overlay.classList.remove('visible');\n    dialog.remove();\n    overlay.remove();\n    document.dispatchEvent(formBuilder.events.modalClosed);\n  };\n\n  /**\n   * Returns the layout data based on controlPosition option\n   * @param  {String} controlPosition 'left' or 'right'\n   * @return {Object}\n   */\n  _helpers.editorLayout = function(controlPosition) {\n    let layoutMap = {\n      left: {\n        stage: 'pull-right',\n        controls: 'pull-left'\n      },\n      right: {\n        stage: 'pull-left',\n        controls: 'pull-right'\n      }\n    };\n\n    return layoutMap[controlPosition] ? layoutMap[controlPosition] : '';\n  };\n\n  /**\n   * Adds overlay to the page. Used for modals.\n   * @return {Object}\n   */\n  _helpers.showOverlay = function() {\n    var overlay = _helpers.markup('div', null, {\n      className: 'form-builder-overlay'\n    });\n    document.body.appendChild(overlay);\n    overlay.classList.add('visible');\n\n    overlay.onclick = function() {\n      _helpers.closeConfirm(overlay);\n    };\n\n    return overlay;\n  };\n\n  /**\n   * Custom confirmation dialog\n   *\n   * @param  {Object}  message   Content to be displayed in the dialog\n   * @param  {Func}  yesAction callback to fire if they confirm\n   * @param  {Boolean} coords    location to put the dialog\n   * @param  {String}  className Custom class to be added to the dialog\n   * @return {Object}            Reference to the modal\n   */\n  _helpers.confirm = function(message, yesAction, coords = false, className = '') {\n    var overlay = _helpers.showOverlay();\n    var yes = _helpers.markup('button', opts.messages.yes, { className: 'yes btn btn-success btn-sm' }),\n      no = _helpers.markup('button', opts.messages.no, { className: 'no btn btn-danger btn-sm' });\n\n    no.onclick = function() {\n      _helpers.closeConfirm(overlay);\n    };\n\n    yes.onclick = function() {\n      yesAction();\n      _helpers.closeConfirm(overlay);\n    };\n\n    var btnWrap = _helpers.markup('div', [no, yes], { className: 'button-wrap' });\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = _helpers.markup('div', [message, btnWrap], { className: className });\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    yes.focus();\n    return miniModal;\n  };\n\n  /**\n   * Popup dialog the does not require confirmation.\n   * @param  {String|DOM|Array}  content\n   * @param  {Boolean} coords    false if no coords are provided. Without coordinates\n   *                             the popup will appear center screen.\n   * @param  {String}  className classname to be added to the dialog\n   * @return {Object}            dom\n   */\n  _helpers.dialog = function(content, coords = false, className = '') {\n    _helpers.showOverlay();\n\n    className = 'form-builder-dialog ' + className;\n\n    var miniModal = _helpers.markup('div', content, { className: className });\n    if (!coords) {\n      coords = {\n        pageX: Math.max(document.documentElement.clientWidth, window.innerWidth || 0) / 2,\n        pageY: Math.max(document.documentElement.clientHeight, window.innerHeight || 0) / 2\n      };\n      miniModal.style.position = 'fixed';\n    } else {\n      miniModal.classList.add('positioned');\n    }\n\n    miniModal.style.left = coords.pageX + 'px';\n    miniModal.style.top = coords.pageY + 'px';\n\n    document.body.appendChild(miniModal);\n\n    if (className.indexOf('data-dialog') !== -1) {\n      document.dispatchEvent(formBuilder.events.viewData);\n    }\n    return miniModal;\n  };\n\n  /**\n   * Removes all fields from the form\n   */\n  _helpers.removeAllfields = function() {\n    var form = document.getElementById(opts.formID);\n    var fields = form.querySelectorAll('li.form-field');\n    var $fields = $(fields);\n    var markEmptyArray = [];\n\n    if (opts.prepend) {\n      markEmptyArray.push(true);\n    }\n\n    if (opts.append) {\n      markEmptyArray.push(true);\n    }\n\n    if (!markEmptyArray.some(elem => elem === true)) {\n      form.parentElement.classList.add('empty');\n    }\n\n    form.classList.add('removing');\n\n    var outerHeight = 0;\n    $fields.each(function() {\n      outerHeight += $(this).outerHeight() + 3;\n    });\n\n    fields[0].style.marginTop = (-outerHeight) + 'px';\n\n    setTimeout(function() {\n      $fields.remove();\n      document.getElementById(opts.formID).classList.remove('removing');\n      _helpers.save();\n    }, 500);\n\n  };\n\n  /**\n   * If user re-orders the elements their order should be saved.\n   *\n   * @param {Object} $cbUL our list of elements\n   */\n  _helpers.setFieldOrder = function($cbUL) {\n    if (!opts.sortableControls) {\n      return false;\n    }\n    var fieldOrder = {};\n    $cbUL.children().each(function(index, element) {\n      fieldOrder[index] = $(element).data('attrs').type;\n    });\n    if (window.sessionStorage) {\n      window.sessionStorage.setItem('fieldOrder', window.JSON.stringify(fieldOrder));\n    }\n  };\n\n  /**\n   * Reorder the controls if the user has previously ordered them.\n   *\n   * @param  {Array} frmbFields\n   * @return {Array}\n   */\n  _helpers.orderFields = function(frmbFields) {\n    var fieldOrder = false;\n\n    if (window.sessionStorage) {\n      if (opts.sortableControls) {\n        fieldOrder = window.sessionStorage.getItem('fieldOrder');\n      } else {\n        window.sessionStorage.removeItem('fieldOrder');\n      }\n    }\n\n    if (!fieldOrder) {\n      fieldOrder = opts.controlOrder.unique();\n    } else {\n      fieldOrder = window.JSON.parse(fieldOrder);\n      fieldOrder = Object.keys(fieldOrder).map(function(i) {\n        return fieldOrder[i];\n      });\n    }\n\n    var newOrderFields = [];\n\n    for (var i = fieldOrder.length - 1; i >= 0; i--) {\n      var field = frmbFields.filter(function(field) {\n        return field.attrs.type === fieldOrder[i];\n      })[0];\n      newOrderFields.push(field);\n    }\n\n    return newOrderFields.filter(Boolean);\n  };\n\n  return _helpers;\n}\n","function formBuilderEventsFn() {\n  'use strict';\n\n  var events = {};\n\n  events.loaded = new Event('loaded');\n  events.viewData = new Event('viewData');\n  events.userDeclined = new Event('userDeclined');\n  events.modalClosed = new Event('modalClosed');\n  events.formSaved = new Event('formSaved');\n\n  return events;\n}\n","/**\n * PHP htmlentities recreation in JavaScript\n * minor changes to match styleguide and remove unneeded functionality\n * @see https://github.com/kvz/phpjs\n */\nvar HTML_ENTITIES = (function() {\n  'use strict';\n\n  var htmlEntities = {};\n\n  htmlEntities.getHtmlTranslationTable = function(table, quoteStyle) {\n\n    var entities = {},\n      hashMap = {},\n      decimal;\n    var constMappingTable = {},\n      constMappingQuoteStyle = {};\n    var useTable = {},\n      useQuoteStyle = {};\n\n    // Translate arguments\n    constMappingTable[0] = 'HTML_SPECIALCHARS';\n    constMappingTable[1] = 'HTML_ENTITIES';\n    constMappingQuoteStyle[0] = 'ENT_NOQUOTES';\n    constMappingQuoteStyle[2] = 'ENT_COMPAT';\n    constMappingQuoteStyle[3] = 'ENT_QUOTES';\n\n    useTable = !isNaN(table) ? constMappingTable[table] : table ? table.toUpperCase() : 'HTML_SPECIALCHARS';\n    useQuoteStyle = !isNaN(quoteStyle) ? constMappingQuoteStyle[quoteStyle] : quoteStyle ? quoteStyle.toUpperCase() :\n      'ENT_COMPAT';\n\n    if (useTable !== 'HTML_SPECIALCHARS' && useTable !== 'HTML_ENTITIES') {\n      throw new Error('Table: ' + useTable + ' not supported');\n      // return false;\n    }\n\n    entities['38'] = '&amp;';\n    if (useTable === 'HTML_ENTITIES') {\n      entities['160'] = '&nbsp;';\n      entities['161'] = '&iexcl;';\n      entities['162'] = '&cent;';\n      entities['163'] = '&pound;';\n      entities['164'] = '&curren;';\n      entities['165'] = '&yen;';\n      entities['166'] = '&brvbar;';\n      entities['167'] = '&sect;';\n      entities['168'] = '&uml;';\n      entities['169'] = '&copy;';\n      entities['170'] = '&ordf;';\n      entities['171'] = '&laquo;';\n      entities['172'] = '&not;';\n      entities['173'] = '&shy;';\n      entities['174'] = '&reg;';\n      entities['175'] = '&macr;';\n      entities['176'] = '&deg;';\n      entities['177'] = '&plusmn;';\n      entities['178'] = '&sup2;';\n      entities['179'] = '&sup3;';\n      entities['180'] = '&acute;';\n      entities['181'] = '&micro;';\n      entities['182'] = '&para;';\n      entities['183'] = '&middot;';\n      entities['184'] = '&cedil;';\n      entities['185'] = '&sup1;';\n      entities['186'] = '&ordm;';\n      entities['187'] = '&raquo;';\n      entities['188'] = '&frac14;';\n      entities['189'] = '&frac12;';\n      entities['190'] = '&frac34;';\n      entities['191'] = '&iquest;';\n      entities['192'] = '&Agrave;';\n      entities['193'] = '&Aacute;';\n      entities['194'] = '&Acirc;';\n      entities['195'] = '&Atilde;';\n      entities['196'] = '&Auml;';\n      entities['197'] = '&Aring;';\n      entities['198'] = '&AElig;';\n      entities['199'] = '&Ccedil;';\n      entities['200'] = '&Egrave;';\n      entities['201'] = '&Eacute;';\n      entities['202'] = '&Ecirc;';\n      entities['203'] = '&Euml;';\n      entities['204'] = '&Igrave;';\n      entities['205'] = '&Iacute;';\n      entities['206'] = '&Icirc;';\n      entities['207'] = '&Iuml;';\n      entities['208'] = '&ETH;';\n      entities['209'] = '&Ntilde;';\n      entities['210'] = '&Ograve;';\n      entities['211'] = '&Oacute;';\n      entities['212'] = '&Ocirc;';\n      entities['213'] = '&Otilde;';\n      entities['214'] = '&Ouml;';\n      entities['215'] = '&times;';\n      entities['216'] = '&Oslash;';\n      entities['217'] = '&Ugrave;';\n      entities['218'] = '&Uacute;';\n      entities['219'] = '&Ucirc;';\n      entities['220'] = '&Uuml;';\n      entities['221'] = '&Yacute;';\n      entities['222'] = '&THORN;';\n      entities['223'] = '&szlig;';\n      entities['224'] = '&agrave;';\n      entities['225'] = '&aacute;';\n      entities['226'] = '&acirc;';\n      entities['227'] = '&atilde;';\n      entities['228'] = '&auml;';\n      entities['229'] = '&aring;';\n      entities['230'] = '&aelig;';\n      entities['231'] = '&ccedil;';\n      entities['232'] = '&egrave;';\n      entities['233'] = '&eacute;';\n      entities['234'] = '&ecirc;';\n      entities['235'] = '&euml;';\n      entities['236'] = '&igrave;';\n      entities['237'] = '&iacute;';\n      entities['238'] = '&icirc;';\n      entities['239'] = '&iuml;';\n      entities['240'] = '&eth;';\n      entities['241'] = '&ntilde;';\n      entities['242'] = '&ograve;';\n      entities['243'] = '&oacute;';\n      entities['244'] = '&ocirc;';\n      entities['245'] = '&otilde;';\n      entities['246'] = '&ouml;';\n      entities['247'] = '&divide;';\n      entities['248'] = '&oslash;';\n      entities['249'] = '&ugrave;';\n      entities['250'] = '&uacute;';\n      entities['251'] = '&ucirc;';\n      entities['252'] = '&uuml;';\n      entities['253'] = '&yacute;';\n      entities['254'] = '&thorn;';\n      entities['255'] = '&yuml;';\n    }\n\n    if (useQuoteStyle !== 'ENT_NOQUOTES') {\n      entities['34'] = '&quot;';\n    }\n    if (useQuoteStyle === 'ENT_QUOTES') {\n      entities['39'] = '&#39;';\n    }\n    entities['60'] = '&lt;';\n    entities['62'] = '&gt;';\n\n    // ascii decimals to real symbols\n    for (decimal in entities) {\n      if (entities.hasOwnProperty(decimal)) {\n        hashMap[String.fromCharCode(decimal)] = entities[decimal];\n      }\n    }\n\n    return hashMap;\n  };\n\n  htmlEntities.encode = function(string, quoteStyle) {\n    var hashMap = this.getHtmlTranslationTable('HTML_ENTITIES', quoteStyle);\n\n    string = string === null ? '' : string + '';\n\n    if (!hashMap) {\n      return false;\n    }\n\n    if (quoteStyle && quoteStyle === 'ENT_QUOTES') {\n      hashMap['\\''] = '&#039;';\n    }\n\n    var regex = new RegExp('&(?:#\\\\d+|#x[\\\\da-f]+|[a-zA-Z][\\\\da-z]*);|[' +\n      Object.keys(hashMap)\n      .join('')\n      // replace regexp special chars\n      .replace(/([()[\\]{}\\-.*+?^$|\\/\\\\])/g, '\\\\$1') + ']',\n      'g');\n\n    return string.replace(regex, function(ent) {\n      let encoded;\n      if (ent.length > 1) {\n        encoded = ent;\n      }\n      encoded = hashMap[ent];\n      return encoded;\n    });\n  };\n\n  return htmlEntities;\n}(HTML_ENTITIES || {}));\n","(function($) {\n  'use strict';\n\n  var Toggle = function(element, options) {\n\n    var defaults = {\n      theme: 'fresh',\n      labels: {\n        off: 'Off',\n        on: 'On'\n      }\n    };\n\n    var opts = $.extend(defaults, options),\n      $kcToggle = $('<div class=\"kc-toggle\"/>').insertAfter(element).append(element);\n\n    $kcToggle.toggleClass('on', element.is(':checked'));\n\n    var kctOn = `<div class=\"kct-on\">${opts.labels.on}</div>`,\n        kctOff = `<div class=\"kct-off\">${opts.labels.off}</div>`,\n        kctHandle = `<div class=\"kct-handle\"></div>`,\n        kctInner = `<div class=\"kct-inner\">${kctOn}${kctHandle}${kctOff}</div>`;\n\n    $kcToggle.append(kctInner);\n\n    $kcToggle.click(function() {\n      element.attr('checked', !element.attr('checked'));\n      $(this).toggleClass('on');\n    });\n\n  };\n\n  $.fn.kcToggle = function(options) {\n    var toggle = this;\n    return toggle.each(function() {\n      var element = $(this);\n      if (element.data('kcToggle')) {\n        return;\n      }\n      var kcToggle = new Toggle(element, options);\n      element.data('kcToggle', kcToggle);\n    });\n  };\n\n})(jQuery);\n","'use strict';\r\n\r\n(function($) {\r\n  var FormBuilder = function(options, element) {\r\n    var formBuilder = this;\r\n\r\n    var defaults = {\r\n      controlPosition: 'right',\r\n      controlOrder: [\r\n        'autocomplete',\r\n        'button',\r\n        'checkbox',\r\n        'checkbox-group',\r\n        'date',\r\n        'file',\r\n        'header',\r\n        'hidden',\r\n        'paragraph',\r\n        'radio-group',\r\n        'select',\r\n        'text',\r\n        'textarea'\r\n      ],\r\n      dataType: 'xml',\r\n      /**\r\n       * Field types to be disabled\r\n       * ['text','select','textarea','radio-group','hidden','file','date','checkbox-group','checkbox','button','autocomplete']\r\n       */\r\n      disableFields: ['autocomplete', 'hidden'],\r\n      // Uneditable fields or other content you would like to appear before and after regular fields:\r\n      append: false,\r\n      prepend: false,\r\n      // array of objects with fields values\r\n      // ex:\r\n      // defaultFields: [{\r\n      //   label: 'First Name',\r\n      //   name: 'first-name',\r\n      //   required: 'true',\r\n      //   description: 'Your first name',\r\n      //   type: 'text'\r\n      // }, {\r\n      //   label: 'Phone',\r\n      //   name: 'phone',\r\n      //   description: 'How can we reach you?',\r\n      //   type: 'text'\r\n      // }],\r\n      defaultFields: [],\r\n      fieldRemoveWarn: false,\r\n      roles: {\r\n        1: 'Administrator'\r\n      },\r\n      messages: {\r\n        addOption: 'Add Option',\r\n        allFieldsRemoved: 'All fields were removed.',\r\n        allowSelect: 'Allow Select',\r\n        autocomplete: 'Autocomplete',\r\n        button: 'Button',\r\n        cannotBeEmpty: 'This field cannot be empty',\r\n        checkboxGroup: 'Checkbox Group',\r\n        checkbox: 'Checkbox',\r\n        checkboxes: 'Checkboxes',\r\n        className: 'Class',\r\n        clearAllMessage: 'Are you sure you want to clear all fields?',\r\n        clearAll: 'Clear',\r\n        close: 'Close',\r\n        content: 'Content',\r\n        copy: 'Copy To Clipboard',\r\n        dateField: 'Date Field',\r\n        description: 'Help Text',\r\n        descriptionField: 'Description',\r\n        devMode: 'Developer Mode',\r\n        editNames: 'Edit Names',\r\n        editorTitle: 'Form Elements',\r\n        editXML: 'Edit XML',\r\n        fieldDeleteWarning: false,\r\n        fieldVars: 'Field Variables',\r\n        fieldNonEditable: 'This field cannot be edited.',\r\n        fieldRemoveWarning: 'Are you sure you want to remove this field?',\r\n        fileUpload: 'File Upload',\r\n        formUpdated: 'Form Updated',\r\n        getStarted: 'Drag a field from the right to this area',\r\n        header: 'Header',\r\n        hide: 'Edit',\r\n        hidden: 'Hidden Input',\r\n        label: 'Label',\r\n        labelEmpty: 'Field Label cannot be empty',\r\n        limitRole: 'Limit access to one or more of the following roles:',\r\n        mandatory: 'Mandatory',\r\n        maxlength: 'Max Length',\r\n        minOptionMessage: 'This field requires a minimum of 2 options',\r\n        name: 'Name',\r\n        no: 'No',\r\n        off: 'Off',\r\n        on: 'On',\r\n        option: 'Option',\r\n        optional: 'optional',\r\n        optionLabelPlaceholder: 'Label',\r\n        optionValuePlaceholder: 'Value',\r\n        optionEmpty: 'Option value required',\r\n        paragraph: 'Paragraph',\r\n        placeholder: 'Placeholder',\r\n        placeholders: {\r\n          value: 'Value',\r\n          label: 'Label',\r\n          text: '',\r\n          textarea: '',\r\n          email: 'Enter you email',\r\n          placeholder: '',\r\n          className: 'space separated classes',\r\n          password: 'Enter your password'\r\n        },\r\n        preview: 'Preview',\r\n        radioGroup: 'Radio Group',\r\n        radio: 'Radio',\r\n        removeMessage: 'Remove Element',\r\n        remove: '&#215;',\r\n        required: 'Required',\r\n        richText: 'Rich Text Editor',\r\n        roles: 'Access',\r\n        save: 'Save',\r\n        selectOptions: 'Options',\r\n        select: 'Select',\r\n        selectColor: 'Select Color',\r\n        selectionsMessage: 'Allow Multiple Selections',\r\n        size: 'Size',\r\n        sizes: {\r\n          xs: 'Extra Small',\r\n          sm: 'Small',\r\n          m: 'Default',\r\n          lg: 'Large'\r\n        },\r\n        style: 'Style',\r\n        styles: {\r\n          btn: {\r\n            'default': 'Default',\r\n            danger: 'Danger',\r\n            info: 'Info',\r\n            primary: 'Primary',\r\n            success: 'Success',\r\n            warning: 'Warning'\r\n          }\r\n        },\r\n        subtype: 'Type',\r\n        subtypes: {\r\n          text: [\r\n            'text',\r\n            'password',\r\n            'email',\r\n            'color'\r\n          ],\r\n          button: [\r\n            'button',\r\n            'submit'\r\n          ],\r\n          header: [\r\n            'h1',\r\n            'h2',\r\n            'h3'\r\n          ],\r\n          paragraph: [\r\n            'p',\r\n            'address',\r\n            'blockquote',\r\n            'canvas',\r\n            'output'\r\n          ]\r\n        },\r\n        text: 'Text Field',\r\n        textArea: 'Text Area',\r\n        toggle: 'Toggle',\r\n        warning: 'Warning!',\r\n        viewXML: '&lt;/&gt;',\r\n        yes: 'Yes'\r\n      },\r\n      notify: {\r\n        error: function(message) {\r\n          return console.error(message);\r\n        },\r\n        success: function(message) {\r\n          return console.log(message);\r\n        },\r\n        warning: function(message) {\r\n          return console.warn(message);\r\n        }\r\n      },\r\n      sortableControls: false,\r\n      prefix: 'form-builder-'\r\n    };\r\n\r\n    // @todo function to set parent types for subtypes\r\n    defaults.messages.subtypes.password = defaults.messages.subtypes.text;\r\n    defaults.messages.subtypes.email = defaults.messages.subtypes.text;\r\n    defaults.messages.subtypes.color = defaults.messages.subtypes.text;\r\n    defaults.messages.subtypes.submit = defaults.messages.subtypes.button;\r\n\r\n    var opts = $.extend(true, defaults, options),\r\n      elem = $(element),\r\n      frmbID = 'frmb-' + $('ul[id^=frmb-]').length++;\r\n\r\n    opts.formID = frmbID;\r\n\r\n    formBuilder.element = element;\r\n\r\n    var $sortableFields = $('<ul/>').attr('id', frmbID).addClass('frmb');\r\n    var _helpers = formBuilderHelpersFn(opts, formBuilder);\r\n\r\n    formBuilder.layout = _helpers.editorLayout(opts.controlPosition);\r\n\r\n    var lastID = frmbID + '-fld-1',\r\n      boxID = frmbID + '-control-box';\r\n\r\n    // create array of field objects to cycle through\r\n    var frmbFields = [{\r\n        tag: 'textarea',\r\n        meta: {\r\n          label: opts.messages.textArea\r\n        },\r\n        attrs: {\r\n          className: 'text-area',\r\n          name: 'textarea'\r\n        }\r\n      }\r\n      // , {\r\n      //   label: opts.messages.text,\r\n      //   attrs: {\r\n      //     type: 'text',\r\n      //     className: 'text-input',\r\n      //     name: 'text-input'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.select,\r\n      //   attrs: {\r\n      //     type: 'select',\r\n      //     className: 'select',\r\n      //     name: 'select'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.radioGroup,\r\n      //   attrs: {\r\n      //     type: 'radio-group',\r\n      //     className: 'radio-group',\r\n      //     name: 'radio-group'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.paragraph,\r\n      //   attrs: {\r\n      //     type: 'paragraph',\r\n      //     className: 'paragraph'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.hidden,\r\n      //   attrs: {\r\n      //     type: 'hidden',\r\n      //     className: 'hidden-input',\r\n      //     name: 'hidden-input'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.header,\r\n      //   attrs: {\r\n      //     type: 'header',\r\n      //     className: 'header'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.fileUpload,\r\n      //   attrs: {\r\n      //     type: 'file',\r\n      //     className: 'file-input',\r\n      //     name: 'file-input'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.dateField,\r\n      //   attrs: {\r\n      //     type: 'date',\r\n      //     className: 'calendar',\r\n      //     name: 'date-input'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.checkboxGroup,\r\n      //   attrs: {\r\n      //     type: 'checkbox-group',\r\n      //     className: 'checkbox-group',\r\n      //     name: 'checkbox-group'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.checkbox,\r\n      //   attrs: {\r\n      //     type: 'checkbox',\r\n      //     className: 'checkbox',\r\n      //     name: 'checkbox'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.button,\r\n      //   attrs: {\r\n      //     type: 'button',\r\n      //     className: 'button-input',\r\n      //     name: 'button'\r\n      //   }\r\n      // }, {\r\n      //   label: opts.messages.autocomplete,\r\n      //   attrs: {\r\n      //     type: 'autocomplete',\r\n      //     className: 'autocomplete',\r\n      //     name: 'autocomplete'\r\n      //   }\r\n      // }\r\n    ];\r\n\r\n    // frmbFields = _helpers.orderFields(frmbFields);\r\n\r\n    // remove disabledFields\r\n    // if (opts.disableFields) {\r\n    //   frmbFields = frmbFields.filter(function(field) {\r\n    //     return !opts.disableFields.inArray(field.attrs.type);\r\n    //   });\r\n    // }\r\n\r\n    // Create draggable fields for formBuilder\r\n\r\n    var cbUl = _helpers.markup('ul', null, { id: boxID, className: 'frmb-control' });\r\n\r\n    if (opts.sortableControls) {\r\n      cbUl.classList.add('sort-enabled');\r\n    }\r\n\r\n    var $cbUL = $(cbUl);\r\n\r\n    // Loop through\r\n    for (var i = frmbFields.length - 1; i >= 0; i--) {\r\n\r\n      let $field = $('<li/>', {\r\n        'class': 'icon-' + frmbFields[i].attrs.className,\r\n        'type': frmbFields[i].type,\r\n        'name': frmbFields[i].className,\r\n        'label': frmbFields[i].label\r\n      });\r\n\r\n      $field.data('newFieldData', frmbFields[i]);\r\n\r\n      let typeLabel = _helpers.markup('span', frmbFields[i].label);\r\n      $field.html(typeLabel).appendTo($cbUL);\r\n    }\r\n\r\n    let viewDataText = opts.dataType === 'xml' ? opts.messages.viewXML : opts.messages.viewJSON;\r\n\r\n    // Build our headers and action links\r\n    var viewData = _helpers.markup('button', viewDataText, {\r\n        id: frmbID + '-view-data',\r\n        type: 'button',\r\n        className: 'view-data btn btn-default'\r\n      }),\r\n      clearAll = _helpers.markup('button', opts.messages.clearAll, {\r\n        id: frmbID + '-clear-all',\r\n        type: 'button',\r\n        className: 'clear-all btn btn-default'\r\n      }),\r\n      saveAll = _helpers.markup('button', opts.messages.save, {\r\n        className: `btn btn-primary ${opts.prefix}save`,\r\n        id: frmbID + '-save',\r\n        type: 'button'\r\n      }),\r\n      formActions = _helpers.markup('div', [clearAll, viewData, saveAll], {\r\n        className: 'form-actions btn-group'\r\n      }).outerHTML;\r\n\r\n    // Sortable fields\r\n    $sortableFields.sortable({\r\n      cursor: 'move',\r\n      opacity: 0.9,\r\n      revert: 150,\r\n      beforeStop: _helpers.beforeStop,\r\n      start: _helpers.startMoving,\r\n      stop: _helpers.stopMoving,\r\n      cancel: 'input, select, .disabled, .form-group, .btn',\r\n      placeholder: 'frmb-placeholder'\r\n    });\r\n\r\n    // ControlBox with different fields\r\n    $cbUL.sortable({\r\n      helper: 'clone',\r\n      opacity: 0.9,\r\n      connectWith: $sortableFields,\r\n      cursor: 'move',\r\n      placeholder: 'ui-state-highlight',\r\n      start: _helpers.startMoving,\r\n      stop: _helpers.stopMoving,\r\n      revert: 150,\r\n      beforeStop: _helpers.beforeStop,\r\n      update: function(event, ui) {\r\n        if (_helpers.doCancel) {\r\n          return false;\r\n        }\r\n        event = event;\r\n        if (ui.item.parent()[0] === $sortableFields[0]) {\r\n          prepFieldVars(ui.item, true);\r\n          _helpers.doCancel = true;\r\n        } else {\r\n          _helpers.setFieldOrder($cbUL);\r\n          _helpers.doCancel = !opts.sortableControls;\r\n        }\r\n      }\r\n    });\r\n\r\n    var $stageWrap = $('<div/>', {\r\n      id: frmbID + '-stage-wrap',\r\n      'class': 'stage-wrap ' + formBuilder.layout.stage\r\n    });\r\n\r\n    var $formWrap = $('<div/>', {\r\n      id: frmbID + '-form-wrap',\r\n      'class': 'form-wrap form-builder' + _helpers.mobileClass()\r\n    });\r\n\r\n    elem.before($stageWrap).appendTo($stageWrap);\r\n\r\n    var cbWrap = $('<div/>', {\r\n      id: frmbID + '-cb-wrap',\r\n      'class': 'cb-wrap ' + formBuilder.layout.controls\r\n    }).append($cbUL[0], formActions);\r\n\r\n    $stageWrap.append($sortableFields, cbWrap);\r\n    $stageWrap.before($formWrap);\r\n    $formWrap.append($stageWrap, cbWrap);\r\n\r\n    var saveAndUpdate = _helpers.debounce(function(evt) {\r\n      if (evt) {\r\n        if (evt.type === 'keyup' && this.name === 'className') {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      let $field = $(this).parents('.form-field:eq(0)');\r\n      _helpers.updatePreview($field);\r\n      _helpers.save();\r\n    });\r\n\r\n    // Save field on change\r\n    $sortableFields.on('change blur keyup', '.form-elements input, .form-elements select, .form-elements textarea', saveAndUpdate);\r\n\r\n    // Add append and prepend options if necessary\r\n    var nonEditableFields = function() {\r\n      let cancelArray = [];\r\n\r\n      if (opts.prepend && !$('.disabled.prepend', $sortableFields).length) {\r\n        let prependedField = _helpers.markup('li', opts.prepend, { className: 'disabled prepend' });\r\n        cancelArray.push(true);\r\n        $sortableFields.prepend(prependedField);\r\n      }\r\n\r\n      if (opts.append && !$('.disabled.append', $sortableFields).length) {\r\n        let appendedField = _helpers.markup('li', opts.append, { className: 'disabled append' });\r\n        cancelArray.push(true);\r\n        $sortableFields.append(appendedField);\r\n      }\r\n\r\n      if (cancelArray.some(elem => elem === true)) {\r\n        $stageWrap.removeClass('empty');\r\n      }\r\n    };\r\n\r\n    var prepFieldVars = function($field, isNew = false) {\r\n      var field = {};\r\n\r\n      if ($field instanceof jQuery) {\r\n        let fieldData = $field.data('newFieldData');\r\n        if (fieldData) {\r\n          field = fieldData.attrs;\r\n          field.label = fieldData.label;\r\n        } else {\r\n          let attrs = $field[0].attributes;\r\n          if (!isNew) {\r\n            field.values = $field.children().map(function(index, elem) {\r\n              return {\r\n                label: $(elem).text(),\r\n                value: $(elem).attr('value'),\r\n                selected: Boolean($(elem).attr('selected'))\r\n              };\r\n            });\r\n          }\r\n          for (var i = attrs.length - 1; i >= 0; i--) {\r\n            field[attrs[i].name] = attrs[i].value;\r\n          }\r\n        }\r\n      } else {\r\n        field = $field;\r\n      }\r\n\r\n      field.label = _helpers.htmlEncode(field.label);\r\n      field.name = isNew ? nameAttr(field) : field.name;\r\n      field.role = field.role;\r\n      field.className = field.className || field.class;\r\n      field.required = (field.required === 'true' || field.required === true);\r\n      field.maxlength = field.maxlength;\r\n      field.toggle = field.toggle;\r\n      field.multiple = field.type.match(/(checkbox-group)/);\r\n      field.description = (field.description !== undefined ? _helpers.htmlEncode(field.description) : '');\r\n\r\n      var match = /(?:^|\\s)btn-(.*?)(?:\\s|$)/g.exec(field.className);\r\n      if (match) {\r\n        field.style = match[1];\r\n      }\r\n\r\n      appendNewField(field);\r\n      $stageWrap.removeClass('empty');\r\n    };\r\n\r\n    // Parse saved XML template data\r\n    var getXML = function() {\r\n      var xml = '';\r\n      if (formBuilder.formData) {\r\n        xml = formBuilder.formData;\r\n      } else if (elem.val() !== '') {\r\n        xml = $.parseXML(formBuilder.element.value.trim());\r\n      } else {\r\n        xml = false;\r\n      }\r\n\r\n      var fields = $(xml).find('field');\r\n      if (fields.length > 0) {\r\n        formBuilder.formData = xml;\r\n        fields.each(function() {\r\n          prepFieldVars($(this));\r\n        });\r\n      } else if (!xml) {\r\n        // Load default fields if none are set\r\n        if (opts.defaultFields && opts.defaultFields.length) {\r\n          opts.defaultFields.reverse();\r\n          for (var i = opts.defaultFields.length - 1; i >= 0; i--) {\r\n            prepFieldVars(opts.defaultFields[i]);\r\n          }\r\n          $stageWrap.removeClass('empty');\r\n          _helpers.save();\r\n        } else if (!opts.prepend && !opts.append) {\r\n          $stageWrap.addClass('empty').attr('data-content', opts.messages.getStarted);\r\n        }\r\n      }\r\n\r\n      $('li.form-field:not(.disabled)', $sortableFields).each(function() {\r\n        _helpers.updatePreview($(this));\r\n      });\r\n\r\n      nonEditableFields();\r\n    };\r\n\r\n    var loadData = function() {\r\n\r\n      let doLoadData = {\r\n        xml: getXML,\r\n        json: function() {\r\n          console.log('coming soon');\r\n        }\r\n      };\r\n\r\n      doLoadData[opts.dataType]();\r\n    };\r\n\r\n    // callback to track disabled tooltips\r\n    $sortableFields.on('mousemove', 'li.disabled', function(e) {\r\n      $('.frmb-tt', this).css({\r\n        left: e.offsetX - 16,\r\n        top: e.offsetY - 34\r\n      });\r\n    });\r\n\r\n    // callback to call disabled tooltips\r\n    $sortableFields.on('mouseenter', 'li.disabled', function() {\r\n      _helpers.disabledTT.add($(this));\r\n    });\r\n\r\n    // callback to call disabled tooltips\r\n    $sortableFields.on('mouseleave', 'li.disabled', function() {\r\n      _helpers.disabledTT.remove($(this));\r\n    });\r\n\r\n    var nameAttr = function(field) {\r\n      var epoch = new Date().getTime();\r\n      return field.type + '-' + epoch;\r\n    };\r\n\r\n    // multi-line textarea\r\n    var appendTextarea = function(values) {\r\n      appendFieldLi(opts.messages.textArea, advFields(values), values);\r\n    };\r\n\r\n    var appendInput = function(values) {\r\n      let type = values.type || 'text';\r\n      appendFieldLi(opts.messages[type], advFields(values), values);\r\n    };\r\n\r\n    /**\r\n     * Add data for field with options [select, checkbox-group, radio-group]\r\n     *\r\n     * @todo   refactor this nasty crap, its actually painful to look at\r\n     * @param  {object} values\r\n     */\r\n    var appendSelectList = function(values) {\r\n      if (!values.values || !values.values.length) {\r\n        values.values = [{\r\n          selected: true\r\n        }, {\r\n          selected: false\r\n        }];\r\n\r\n        values.values = values.values.map(function(elem, index) {\r\n          elem.label = `${opts.messages.option} ${index + 1}`;\r\n          elem.value = _helpers.hyphenCase(elem.label);\r\n          return elem;\r\n        });\r\n      }\r\n\r\n      var field = '';\r\n\r\n      field += advFields(values);\r\n      field += '<div class=\"form-group field-options\">';\r\n      field += '<label class=\"false-label\">' + opts.messages.selectOptions + '</label>';\r\n      field += `<div class=\"sortable-options-wrap\">`;\r\n      if (values.type === 'select') {\r\n        field += '<div class=\"allow-multi\">';\r\n        field += '<input type=\"checkbox\" id=\"multiple_' + lastID + '\" name=\"multiple\"' + (values.multiple ? 'checked=\"checked\"' : '') + '>';\r\n        field += '<label class=\"multiple\" for=\"multiple_' + lastID + '\">' + opts.messages.selectionsMessage + '</label>';\r\n        field += '</div>';\r\n      }\r\n      field += '<ol class=\"sortable-options\">';\r\n      for (i = 0; i < values.values.length; i++) {\r\n        field += selectFieldOptions(values.name, values.values[i], values.values[i].selected, values.multiple);\r\n      }\r\n      field += '</ol>';\r\n      let addOption = _helpers.markup('a', opts.messages.addOption, { className: 'add add-opt' });\r\n      field += _helpers.markup('div', addOption, { className: 'option-actions' }).outerHTML;\r\n      field += '</div>';\r\n      field += '</div>';\r\n      appendFieldLi(opts.messages.select, field, values);\r\n\r\n      $('.sortable-options').sortable(); // making the dynamically added option fields sortable.\r\n    };\r\n\r\n    var appendNewField = function(values) {\r\n\r\n      // TODO: refactor to move functions into this object\r\n      var appendFieldType = {\r\n        'select': appendSelectList,\r\n        'rich-text': appendTextarea,\r\n        'textarea': appendTextarea,\r\n        'radio-group': appendSelectList,\r\n        'checkbox-group': appendSelectList\r\n      };\r\n\r\n      values = values || '';\r\n\r\n      if (appendFieldType[values.type]) {\r\n        appendFieldType[values.type](values);\r\n      } else {\r\n        appendInput(values);\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Build the editable properties for the field\r\n     * @param  {object} values configuration object for advanced fields\r\n     * @return {String}        markup for advanced fields\r\n     */\r\n    var advFields = function(values) {\r\n      var advFields = [],\r\n        key,\r\n        roles = values.role !== undefined ? values.role.split(',') : [];\r\n\r\n      // var fieldLabelLabel = _helpers.markup('label', opts.messages.label);\r\n      // var fieldLabelInput = _helpers.markup('input', null, {\r\n      //   type: 'text',\r\n      //   name: 'label',\r\n      //   value: values.label,\r\n      //   className: 'fld-label form-control'\r\n      // });\r\n      // var fieldLabel = _helpers.markup('div', [fieldLabelLabel, fieldLabelInput], {\r\n      //   className: 'form-group label-wrap'\r\n      // });\r\n      advFields.push(textAttribute('label', values));\r\n\r\n      // advFields.push(fieldLabel.outerHTML);\r\n\r\n      values.size = values.size || 'm';\r\n      values.style = values.style || 'default';\r\n\r\n      advFields.push(fieldDescription(values));\r\n\r\n      advFields.push(subTypeField(values));\r\n\r\n      advFields.push(btnStyles(values.style, values.type));\r\n\r\n      // Placeholder\r\n      advFields.push(textAttribute('placeholder', values));\r\n      // Class\r\n      advFields.push(textAttribute('className', values));\r\n\r\n      advFields.push(textAttribute('name', values));\r\n\r\n      advFields.push('<div class=\"form-group access-wrap\"><label>' + opts.messages.roles + '</label>');\r\n\r\n      advFields.push('<input type=\"checkbox\" name=\"enable_roles\" value=\"\" ' + (values.role !== undefined ? 'checked' : '') + ' id=\"enable_roles-' + lastID + '\"/> <label for=\"enable_roles-' + lastID + '\" class=\"roles-label\">' + opts.messages.limitRole + '</label>');\r\n      advFields.push('<div class=\"available-roles\" ' + (values.role !== undefined ? 'style=\"display:block\"' : '') + '>');\r\n\r\n      for (key in opts.roles) {\r\n        if ($.inArray(key, ['date', '4']) === -1) {\r\n          advFields.push('<input type=\"checkbox\" name=\"roles[]\" value=\"' + key + '\" id=\"fld-' + lastID + '-roles-' + key + '\" ' + ($.inArray(key, roles) !== -1 ? 'checked' : '') + ' class=\"roles-field\" /><label for=\"fld-' + lastID + '-roles-' + key + '\">' + opts.roles[key] + '</label><br/>');\r\n        }\r\n      }\r\n      advFields.push('</div></div>');\r\n\r\n      advFields.push(textAttribute('maxlength', values));\r\n\r\n      return advFields.join('');\r\n    };\r\n\r\n    /**\r\n     * Description meta for field\r\n     *\r\n     * @param  {Object} values field values\r\n     * @return {String}        markup for attribute, @todo change to actual Node\r\n     */\r\n    var fieldDescription = function(values) {\r\n      var noDescFields = [\r\n          'header',\r\n          'paragraph',\r\n          'button'\r\n        ],\r\n        noMakeAttr = [],\r\n        descriptionField = '';\r\n\r\n      noDescFields = noDescFields.concat(opts.messages.subtypes.header, opts.messages.subtypes.paragraph);\r\n\r\n      if (noDescFields.indexOf(values.type) === -1) {\r\n        noMakeAttr.push(true);\r\n      }\r\n\r\n      if (noMakeAttr.some(elem => elem === true)) {\r\n        let fieldDescLabel = _helpers.markup('label', opts.messages.description, { 'for': 'description-' + lastID }),\r\n          fieldDescInput = _helpers.markup('input', null, {\r\n            type: 'text',\r\n            className: 'fld-description form-control',\r\n            name: 'description',\r\n            id: 'description-' + lastID,\r\n            value: values.description\r\n          }),\r\n          fieldDesc = _helpers.markup('div', [fieldDescLabel, fieldDescInput], {\r\n            'class': 'form-group description-wrap'\r\n          });\r\n        descriptionField = fieldDesc.outerHTML;\r\n      }\r\n\r\n      return descriptionField;\r\n    };\r\n\r\n    /**\r\n     * Changes a fields type\r\n     *\r\n     * @param  {Object} values\r\n     * @return {String}      markup for type <select> input\r\n     */\r\n    var subTypeField = function(values) {\r\n      let subTypes = opts.messages.subtypes,\r\n        type = values.type,\r\n        subtype = values.subtype || '',\r\n        subTypeField = '',\r\n        selected;\r\n\r\n      if (subTypes[type]) {\r\n        let subTypeLabel = `<label>${opts.messages.subtype}</label>`;\r\n        subTypeField += `<select name=\"subtype\" class=\"fld-subtype form-control\" id=\"subtype-${lastID}\">`;\r\n        subTypes[type].forEach(function(element) {\r\n          selected = (subtype === element) ? 'selected' : '';\r\n          subTypeField += `<option value=\"${element}\" ${selected}>${element}</option>`;\r\n        });\r\n        subTypeField += `</select>`;\r\n        subTypeField = `<div class=\"form-group subtype-wrap\">${subTypeLabel} ${subTypeField}</div>`;\r\n      }\r\n\r\n      return subTypeField;\r\n    };\r\n\r\n    var btnStyles = function(style, type) {\r\n      let tags = {\r\n          button: 'btn'\r\n        },\r\n        styles = opts.messages.styles[tags[type]],\r\n        styleField = '';\r\n\r\n      if (styles) {\r\n        let styleLabel = `<label>${opts.messages.style}</label>`;\r\n        styleField += `<input value=\"${style}\" name=\"style\" type=\"hidden\" class=\"btn-style\">`;\r\n        styleField += '<div class=\"btn-group\" role=\"group\">';\r\n\r\n        Object.keys(opts.messages.styles[tags[type]]).forEach(function(element) {\r\n          let active = style === element ? 'active' : '';\r\n          styleField += `<button value=\"${element}\" type=\"${type}\" class=\"${active} btn-xs ${tags[type]} ${tags[type]}-${element}\">${opts.messages.styles[tags[type]][element]}</button>`;\r\n        });\r\n\r\n        styleField += '</div>';\r\n\r\n        styleField = `<div class=\"form-group style-wrap\">${styleLabel} ${styleField}</div>`;\r\n      }\r\n\r\n      return styleField;\r\n    };\r\n\r\n    /**\r\n     * Generate some text inputs for field attributes, **will be replaced**\r\n     * @param  {String} attribute\r\n     * @param  {Object} values\r\n     * @return {String}\r\n     */\r\n    var textAttribute = function(attribute, values) {\r\n      var placeholderFields = [\r\n        'text',\r\n        'textarea',\r\n        'select'\r\n      ];\r\n      var noName = [\r\n        'header'\r\n      ];\r\n\r\n      var textArea = ['paragraph'];\r\n\r\n      var noMaxlength = [\r\n        'checkbox',\r\n        'select',\r\n        'checkbox-group',\r\n        'date',\r\n        'autocomplete',\r\n        'radio-group',\r\n        'hidden',\r\n        'button',\r\n        'header'\r\n      ];\r\n\r\n      var attrVal = (attribute === 'label') ? values.label : (values[attribute] || '');\r\n      var attrLabel = opts.messages[attribute];\r\n      if (attribute === 'label' && textArea.inArray(values.type)) {\r\n        attrLabel = opts.messages.content;\r\n      }\r\n\r\n      noName = noName.concat(opts.messages.subtypes.header, textArea);\r\n      noMaxlength = noMaxlength.concat(textArea);\r\n\r\n      let placeholders = opts.messages.placeholders,\r\n        placeholder = placeholders[attribute] || '',\r\n        attributefield = '',\r\n        noMakeAttr = [];\r\n\r\n      // Field has placeholder attribute\r\n      if (attribute === 'placeholder' && !placeholderFields.inArray(values.type)) {\r\n        noMakeAttr.push(true);\r\n      }\r\n\r\n      // Field has name attribute\r\n      if (attribute === 'name' && noName.inArray(values.type)) {\r\n        noMakeAttr.push(true);\r\n      }\r\n\r\n      // Field has maxlength attribute\r\n      if (attribute === 'maxlength' && noMaxlength.inArray(values.type)) {\r\n        noMakeAttr.push(true);\r\n      }\r\n\r\n      if (!noMakeAttr.some(elem => elem === true)) {\r\n        let attributeLabel = `<label>${attrLabel}</label>`;\r\n\r\n        if (attribute === 'label' && textArea.inArray(values.type)) {\r\n          attributefield += `<textarea name=\"${attribute}\" placeholder=\"${placeholder}\" class=\"fld-${attribute} form-control\" id=\"${attribute}-${lastID}\">${attrVal}</textarea>`;\r\n        } else {\r\n          attributefield += `<input type=\"text\" value=\"${attrVal}\" name=\"${attribute}\" placeholder=\"${placeholder}\" class=\"fld-${attribute} form-control\" id=\"${attribute}-${lastID}\">`;\r\n        }\r\n\r\n        attributefield = `<div class=\"form-group ${attribute}-wrap\">${attributeLabel} ${attributefield}</div>`;\r\n      }\r\n\r\n      return attributefield;\r\n    };\r\n\r\n    var requiredField = function(values) {\r\n      var noRequire = [\r\n          'header',\r\n          'paragraph',\r\n          'button'\r\n        ],\r\n        noMake = [],\r\n        requireField = '';\r\n\r\n      if (noRequire.inArray(values.type)) {\r\n        noMake.push(true);\r\n      }\r\n\r\n      if (!noMake.some(elem => elem === true)) {\r\n\r\n        requireField += '<div class=\"form-group\">';\r\n        requireField += '<label>&nbsp;</label>';\r\n        let requiredField = _helpers.markup('input', null, {\r\n          className: 'required',\r\n          type: 'checkbox',\r\n          name: 'required-' + lastID,\r\n          id: 'required-' + lastID,\r\n          value: 1\r\n        });\r\n\r\n        requiredField.defaultChecked = values.required;\r\n\r\n        requireField += requiredField.outerHTML;\r\n        requireField += _helpers.markup('label', opts.messages.required, {\r\n          className: 'required-label',\r\n          'for': 'required-' + lastID\r\n        }).outerHTML;\r\n        requireField += '</div>';\r\n\r\n      }\r\n      return requireField;\r\n    };\r\n\r\n    // Append the new field to the editor\r\n    var appendFieldLi = function(title, field, values) {\r\n      var labelVal = $(field).find('input[name=\"label\"]').val(),\r\n        label = (labelVal ? labelVal : title);\r\n\r\n      var delBtn = _helpers.markup('a', opts.messages.remove, {\r\n          id: 'del_' + lastID,\r\n          className: 'del-button btn delete-confirm',\r\n          title: opts.messages.removeMessage\r\n        }),\r\n        toggleBtn = _helpers.markup('a', null, {\r\n          id: lastID + '-edit',\r\n          className: 'toggle-form btn icon-pencil',\r\n          title: opts.messages.hide\r\n        }),\r\n        required = values.required,\r\n        toggle = values.toggle || undefined,\r\n        tooltip = values.description !== '' ? '<span class=\"tooltip-element\" tooltip=\"' + values.description + '\">?</span>' : '';\r\n\r\n      var liContents = _helpers.markup(\r\n        'div', [toggleBtn, delBtn], { className: 'field-actions' }\r\n      ).outerHTML;\r\n\r\n      liContents += '<label class=\"field-label\">' + label + '</label>' + tooltip + '<span class=\"required-asterisk\" ' + (required ? 'style=\"display:inline\"' : '') + '> *</span>';\r\n      liContents += _helpers.markup('div', '', { className: 'prev-holder' }).outerHTML;\r\n      liContents += '<div id=\"' + lastID + '-holder\" class=\"frm-holder\">';\r\n      liContents += '<div class=\"form-elements\">';\r\n\r\n      liContents += requiredField(values);\r\n\r\n      if (values.type === 'checkbox') {\r\n        liContents += '<div class=\"form-group\">';\r\n        liContents += '<label>&nbsp;</label>';\r\n        liContents += '<input class=\"checkbox-toggle\" type=\"checkbox\" value=\"1\" name=\"toggle-' + lastID + '\" id=\"toggle-' + lastID + '\"' + (toggle === 'true' ? ' checked' : '') + ' /><label class=\"toggle-label\" for=\"toggle-' + lastID + '\">' + opts.messages.toggle + '</label>';\r\n        liContents += '</div>';\r\n      }\r\n      liContents += field;\r\n      liContents += _helpers.markup('a', opts.messages.close, { className: 'close-field' }).outerHTML;\r\n\r\n      liContents += '</div>';\r\n      liContents += '</div>';\r\n\r\n      let li = _helpers.markup('li', liContents, {\r\n          'class': values.type + '-field form-field',\r\n          'type': values.type,\r\n          id: lastID\r\n        }),\r\n        $li = $(li);\r\n\r\n      $li.data('fieldData', { attrs: values });\r\n\r\n      if (typeof _helpers.stopIndex !== 'undefined') {\r\n        $('> li', $sortableFields).eq(_helpers.stopIndex).after($li);\r\n      } else {\r\n        $sortableFields.append($li);\r\n      }\r\n\r\n      _helpers.updatePreview($li);\r\n\r\n      $(document.getElementById('frm-' + lastID + '-item')).hide().slideDown(250);\r\n\r\n      lastID = _helpers.incrementId(lastID);\r\n    };\r\n\r\n\r\n\r\n    // Select field html, since there may be multiple\r\n    var selectFieldOptions = function(name, values, selected, multipleSelect) {\r\n      var optionInputType = {\r\n        selected: (multipleSelect ? 'checkbox' : 'radio')\r\n      };\r\n\r\n      let defaultOptionData = {\r\n        selected: selected,\r\n        label: '',\r\n        value: ''\r\n      };\r\n\r\n      let optionData = Object.assign(defaultOptionData, values),\r\n        optionInputs = [];\r\n\r\n      for (var prop in optionData) {\r\n        if (optionData.hasOwnProperty(prop)) {\r\n          let attrs = {\r\n            type: optionInputType[prop] || 'text',\r\n            'class': 'option-' + prop,\r\n            placeholder: opts.messages.placeholders[prop],\r\n            value: optionData[prop],\r\n            name: name\r\n          };\r\n          let option = _helpers.markup('input', null, attrs);\r\n          if (prop === 'selected') {\r\n            option.checked = optionData.selected;\r\n          }\r\n          optionInputs.push(option);\r\n        }\r\n      }\r\n\r\n      let removeAttrs = {\r\n        className: 'remove btn',\r\n        title: opts.messages.removeMessage\r\n      };\r\n      optionInputs.push(_helpers.markup('a', opts.messages.remove, removeAttrs));\r\n\r\n      let field = _helpers.markup('li', optionInputs);\r\n\r\n      return field.outerHTML;\r\n    };\r\n\r\n    // ---------------------- UTILITIES ---------------------- //\r\n\r\n    // delete options\r\n    $sortableFields.on('click touchstart', '.remove', function(e) {\r\n      var $field = $(this).parents('.form-field:eq(0)');\r\n      e.preventDefault();\r\n      var optionsCount = $(this).parents('.sortable-options:eq(0)').children('li').length;\r\n      if (optionsCount <= 2) {\r\n        opts.notify.error('Error: ' + opts.messages.minOptionMessage);\r\n      } else {\r\n        $(this).parent('li').slideUp('250', function() {\r\n          $(this).remove();\r\n        });\r\n      }\r\n      saveAndUpdate.call($field);\r\n    });\r\n\r\n    // touch focus\r\n    $sortableFields.on('touchstart', 'input', function(e) {\r\n      if (e.handled !== true) {\r\n        if ($(this).attr('type') === 'checkbox') {\r\n          $(this).trigger('click');\r\n        } else {\r\n          $(this).focus();\r\n          let fieldVal = $(this).val();\r\n          $(this).val(fieldVal);\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    // toggle fields\r\n    $sortableFields.on('click touchstart', '.toggle-form', function(e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      if (e.handled !== true) {\r\n        var targetID = $(this).parents('.form-field:eq(0)').attr('id');\r\n        _helpers.toggleEdit(targetID);\r\n        e.handled = true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * Toggles the edit mode for the given field\r\n     * @param  {String} fieldId\r\n     */\r\n    _helpers.toggleEdit = function(fieldId) {\r\n      var field = document.getElementById(fieldId),\r\n        toggleBtn = $('.toggle-form', field),\r\n        editMode = $('.frm-holder', field);\r\n      field.classList.toggle('editing');\r\n      toggleBtn.toggleClass('open');\r\n      $('.prev-holder', field).slideToggle(250);\r\n      editMode.slideToggle(250);\r\n    };\r\n\r\n    // update preview to label\r\n    $sortableFields.on('keyup change', '[name=\"label\"]', function() {\r\n      $('.field-label', $(this).closest('li')).text($(this).val());\r\n    });\r\n\r\n    // remove error styling when users tries to correct mistake\r\n    $sortableFields.delegate('input.error', 'keyup', function() {\r\n      $(this).removeClass('error');\r\n    });\r\n\r\n    // update preview for description\r\n    $sortableFields.on('keyup', 'input[name=\"description\"]', function() {\r\n      var $field = $(this).parents('.form-field:eq(0)');\r\n      var closestToolTip = $('.tooltip-element', $field);\r\n      var ttVal = $(this).val();\r\n      if (ttVal !== '') {\r\n        if (!closestToolTip.length) {\r\n          var tt = '<span class=\"tooltip-element\" tooltip=\"' + ttVal + '\">?</span>';\r\n          $('.field-label', $field).after(tt);\r\n        } else {\r\n          closestToolTip.attr('tooltip', ttVal).css('display', 'inline-block');\r\n        }\r\n      } else {\r\n        if (closestToolTip.length) {\r\n          closestToolTip.css('display', 'none');\r\n        }\r\n      }\r\n    });\r\n\r\n    _helpers.updateMultipleSelect();\r\n\r\n    // format name attribute\r\n    $sortableFields.delegate('input[name=\"name\"]', 'keyup', function() {\r\n      $(this).val(_helpers.safename($(this).val()));\r\n      if ($(this).val() === '') {\r\n        $(this).addClass('field_error').attr('placeholder', opts.messages.cannotBeEmpty);\r\n      } else {\r\n        $(this).removeClass('field_error');\r\n      }\r\n    });\r\n\r\n    $sortableFields.delegate('input.fld-maxlength', 'keyup', function() {\r\n      $(this).val(_helpers.forceNumber($(this).val()));\r\n    });\r\n\r\n    // Delete field\r\n    $sortableFields.on('click touchstart', '.delete-confirm', function(e) {\r\n      e.preventDefault();\r\n\r\n      let buttonPosition = this.getBoundingClientRect(),\r\n        bodyRect = document.body.getBoundingClientRect(),\r\n        coords = {\r\n          pageX: buttonPosition.left + (buttonPosition.width / 2),\r\n          pageY: (buttonPosition.top - bodyRect.top) - 12\r\n        };\r\n\r\n      var deleteID = $(this).parents('.form-field:eq(0)').attr('id'),\r\n        $field = $(document.getElementById(deleteID));\r\n\r\n      let removeField = () => {\r\n        $field.slideUp(250, function() {\r\n          $field.removeClass('deleting');\r\n          $field.remove();\r\n          _helpers.save();\r\n          if (!$sortableFields[0].childNodes.length) {\r\n            $stageWrap.addClass('empty').attr('data-content', opts.messages.getStarted);\r\n          }\r\n        });\r\n      };\r\n\r\n      document.addEventListener('modalClosed', function() {\r\n        $field.removeClass('deleting');\r\n      }, false);\r\n\r\n      // Check if user is sure they want to remove the field\r\n      if (opts.fieldRemoveWarn) {\r\n        let warnH3 = _helpers.markup('h3', opts.messages.warning),\r\n          warnMessage = _helpers.markup('p', opts.messages.fieldRemoveWarning);\r\n        _helpers.confirm([warnH3, warnMessage], removeField, coords);\r\n        $field.addClass('deleting');\r\n      } else {\r\n        removeField($field);\r\n      }\r\n    });\r\n\r\n    // Update button style selection\r\n    $sortableFields.on('click', '.style-wrap button', function() {\r\n      let styleVal = $(this).val(),\r\n        $parent = $(this).parent(),\r\n        $btnStyle = $parent.prev('.btn-style');\r\n      $btnStyle.val(styleVal);\r\n      $(this).siblings('.btn').removeClass('active');\r\n      $(this).addClass('active');\r\n      saveAndUpdate.call($parent);\r\n    });\r\n\r\n    // Attach a callback to toggle required asterisk\r\n    $sortableFields.on('click', 'input.required', function() {\r\n      var requiredAsterisk = $(this).parents('li.form-field').find('.required-asterisk');\r\n      requiredAsterisk.toggle();\r\n    });\r\n\r\n    // Attach a callback to toggle roles visibility\r\n    $sortableFields.on('click', 'input[name=\"enable_roles\"]', function() {\r\n      var roles = $(this).siblings('div.available-roles'),\r\n        enableRolesCB = $(this);\r\n      roles.slideToggle(250, function() {\r\n        if (!enableRolesCB.is(':checked')) {\r\n          $('input[type=\"checkbox\"]', roles).removeAttr('checked');\r\n        }\r\n      });\r\n    });\r\n\r\n    // Attach a callback to add new options\r\n    $sortableFields.on('click', '.add-opt', function(e) {\r\n      e.preventDefault();\r\n      var $optionWrap = $(this).parents('.field-options:eq(0)'),\r\n        $multiple = $('[name=\"multiple\"]', $optionWrap),\r\n        $firstOption = $('.option-selected:eq(0)', $optionWrap),\r\n        isMultiple = false;\r\n\r\n      if ($multiple.length) {\r\n        isMultiple = $multiple.prop('checked');\r\n      } else {\r\n        isMultiple = ($firstOption.attr('type') === 'checkbox');\r\n      }\r\n\r\n      let name = $firstOption.attr('name');\r\n\r\n      $('.sortable-options', $optionWrap).append(selectFieldOptions(name, false, false, isMultiple));\r\n      _helpers.updateMultipleSelect();\r\n    });\r\n\r\n    // Attach a callback to close link\r\n    $sortableFields.on('click touchstart', '.close-field', function() {\r\n      let fieldId = $(this).parents('li.form-field:eq(0)').attr('id');\r\n      _helpers.toggleEdit(fieldId);\r\n    });\r\n\r\n    $sortableFields.on('mouseover mouseout', '.remove, .del-button', function() {\r\n      $(this).parents('li:eq(0)').toggleClass('delete');\r\n    });\r\n\r\n    // View XML\r\n    var xmlButton = $(document.getElementById(frmbID + '-view-data'));\r\n    xmlButton.click(function(e) {\r\n      e.preventDefault();\r\n      var xml = _helpers.htmlEncode(elem.val()),\r\n        code = _helpers.markup('code', xml, { className: 'xml' }),\r\n        pre = _helpers.markup('pre', code);\r\n      _helpers.dialog(pre, null, 'data-dialog');\r\n    });\r\n\r\n    // Clear all fields in form editor\r\n    var clearButton = $(document.getElementById(frmbID + '-clear-all'));\r\n    clearButton.click(function() {\r\n      let fields = $('li.form-field');\r\n      let buttonPosition = this.getBoundingClientRect(),\r\n        bodyRect = document.body.getBoundingClientRect(),\r\n        coords = {\r\n          pageX: buttonPosition.left + (buttonPosition.width / 2),\r\n          pageY: (buttonPosition.top - bodyRect.top) - 12\r\n        };\r\n\r\n      if (fields.length) {\r\n        _helpers.confirm(opts.messages.clearAllMessage, function() {\r\n          _helpers.removeAllfields();\r\n          opts.notify.success(opts.messages.allFieldsRemoved);\r\n          _helpers.save();\r\n        }, coords);\r\n      } else {\r\n        _helpers.dialog('There are no fields to clear', { pageX: coords.pageX, pageY: coords.pageY });\r\n      }\r\n    });\r\n\r\n    // Save Idea Template\r\n    $(document.getElementById(frmbID + '-save')).click(function(e) {\r\n      e.preventDefault();\r\n      _helpers.save();\r\n      _helpers.validateForm(e);\r\n    });\r\n\r\n    elem.parent().find('p[id*=\"ideaTemplate\"]').remove();\r\n    elem.wrap('<div class=\"template-textarea-wrap\"/>');\r\n\r\n    loadData();\r\n\r\n    $sortableFields.css('min-height', $cbUL.height());\r\n\r\n    document.dispatchEvent(formBuilder.events.loaded);\r\n\r\n    return formBuilder;\r\n\r\n  };\r\n\r\n  $.fn.formBuilder = function(options) {\r\n    return this.each(function() {\r\n      var element = this,\r\n        formBuilder;\r\n      if ($(element).data('formBuilder')) {\r\n        var existingFormBuilder = $(element).parents('.form-builder:eq(0)');\r\n        var newElement = $(element).clone();\r\n        existingFormBuilder.before(newElement);\r\n        existingFormBuilder.remove();\r\n        formBuilder = new FormBuilder(options, newElement[0]);\r\n        newElement.data('formBuilder', formBuilder);\r\n      } else {\r\n        formBuilder = new FormBuilder(options, element);\r\n        $(element).data('formBuilder', formBuilder);\r\n      }\r\n    });\r\n  };\r\n\r\n})(jQuery);\r\n","// toXML is a jQuery plugin that turns our form editor into XML\n// @todo this is a total mess that has to be refactored\n(function($) {\n  'use strict';\n  $.fn.toXML = function(_helpers) {\n\n    var serialStr = '';\n\n    var fieldOptions = function($field) {\n      let options = [];\n      $('.sortable-options li', $field).each(function() {\n        let $option = $(this),\n          attrs = {\n            value: $('.option-value', $option).val(),\n            selected: $('.option-selected', $option).is(':checked')\n          },\n          option = _helpers.markup('option', $('.option-label', $option).val(), attrs).outerHTML;\n        options.push('\\n\\t\\t\\t' + option);\n      });\n      return options.join('') + '\\n\\t\\t';\n    };\n\n    // Begin the core plugin\n    this.each(function() {\n      let sortableFields = this;\n      if (sortableFields.childNodes.length >= 1) {\n        serialStr += '<form-template>\\n\\t<fields>';\n        // build new xml\n        sortableFields.childNodes.forEach(function(field) {\n          var $field = $(field);\n          var fieldData = $field.data('fieldData');\n\n          if (!($field.hasClass('disabled'))) {\n            var roleVals = field.querySelectorAll('.roles-field:checked').map(function(n) {\n              return n.value;\n            }).join(',');\n\n            let types = _helpers.getTypes($field);\n            var xmlAttrs = {\n              className: fieldData.className,\n              description: $('input.fld-description', $field).val(),\n              label: $('.fld-label', $field).val(),\n              maxlength: $('input.fld-maxlength', $field).val(),\n              multiple: $('input[name=\"multiple\"]', $field).is(':checked'),\n              name: $('input.fld-name', $field).val(),\n              placeholder: $('input.fld-placeholder', $field).val(),\n              required: $('input.required', $field).is(':checked'),\n              role: roleVals,\n              toggle: $('.checkbox-toggle', $field).is(':checked'),\n              type: types.type,\n              subtype: types.subtype\n            };\n            xmlAttrs = _helpers.trimAttrs(xmlAttrs);\n            xmlAttrs = _helpers.escapeAttrs(xmlAttrs);\n            var multipleField = xmlAttrs.type.match(/(select|checkbox-group|radio-group)/);\n\n            var fieldContent = '',\n              xmlField;\n            if (multipleField) {\n              fieldContent = fieldOptions($field);\n            }\n\n            xmlField = _helpers.markup('field', fieldContent, xmlAttrs);\n            serialStr += '\\n\\t\\t' + xmlField.outerHTML;\n          }\n        });\n        serialStr += '\\n\\t</fields>\\n</form-template>';\n      } // if \"$(this).children().length >= 1\"\n\n    });\n\n    return serialStr;\n  };\n})(jQuery);\n","'use strict';\n\n// Polyfill for Object.assign\nif (typeof Object.assign !== 'function') {\n  (function() {\n    Object.assign = function(target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n      return output;\n    };\n  })();\n}\n\n// Element.remove() polyfill\nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function() {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\n// Event polyfill\nif (typeof Event !== 'function') {\n  (function() {\n    window.Event = function(evt) {\n      var event = document.createEvent('Event');\n      event.initEvent(evt, true, true);\n      return event;\n    };\n  })();\n}\n\n/**\n * Nice syntax for testing if element is in array\n * @param  {String|Object} needle\n * @return {Boolean}\n */\nArray.prototype.inArray = function(needle) {\n  return this.indexOf(needle) !== -1;\n};\n\n\n/**\n * Remove duplicates from an array of elements\n * @param  {array} arrArg array with possible duplicates\n * @return {array}        array with only unique values\n */\nArray.prototype.unique = function() {\n  return this.filter((elem, pos, arr) => {\n    return arr.indexOf(elem) === pos;\n  });\n};\n\n// Remove specific values from array. use sparingly\nArray.prototype.remove = function() {\n  var what, a = arguments,\n    L = a.length,\n    ax;\n  while (L && this.length) {\n    what = a[--L];\n    while ((ax = this.indexOf(what)) !== -1) {\n      this.splice(ax, 1);\n    }\n  }\n  return this;\n};\n\n// Lets us loop and map through NodeLists\nNodeList.prototype.forEach = Array.prototype.forEach;\nNodeList.prototype.map = Array.prototype.map;\n"],"sourceRoot":"/source/"}